{"version":3,"sources":["components/LANDING.png","Grid.js","Navbar.js","priorityq.js","App.js","components/Home.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","Grid","props","height","width","gridList","grid","start","end","i","rowList","j","pointer","push","key","style","border","backgroundColor","WebkitUserSelect","onClick","changeState","className","map","object","index","Navbar","state","selectedAlgo","currentAlgo","event","algo","target","getAttribute","toString","setString","document","getElementById","innerHTML","this","handle","setState","id","href","toggleSource","toggleDestination","type","visual","data-toggle","onMouseDown","handleChange","randomize","clearWalls","newSpeed","React","Component","QElement","element","priority","PriorityQueue","items","qElement","contain","length","splice","isEmpty","shift","D","handleClose","show","Modal","onHide","backdrop","keyboard","opacity","color","Header","closeButton","Title","Body","Footer","Button","variant","App","Array","fill","undefined","speed","modalshow","heuristics","path","changeSource","changeDestination","changeGrid","showModal","hideModal","randomizeMatrix","clearGrid","newGrid","Math","floor","random","x","y","changeSpeed","selectAlgo","name","visualize","a","stack","flag","ok","current","pop","Promise","done","setTimeout","list","concat","pathdisplay","queue","dist","par","ptr","reverse","pq","enqueue","front","dequeue","dp","clearPath","abs","Welcome","toggleChange","option","isChecked1","isChecked2","userAnswer","question","checked","onChange","onSubmit","httpGet","theUrl","xmlHttp","XMLHttpRequest","open","send","responseText","Home","redirect","answer","handleShow","res","JSON","parse","console","log","e","alert","to","background","Background","backgroundPosition","backgroundSize","backgroundRepeat","position","margin","bind","Root","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.978474ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LANDING.ee7b2b54.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n *\r\n * @param {props} props\r\n * @return {*}\r\n * @constructor\r\n */\r\nfunction Grid(props) {\r\n  const height = props.height; const width = props.width;\r\n  const gridList = [];\r\n\r\n  /* status of grid states for reference\r\n      0: normal cell\r\n      1:wall\r\n      2:visited during search\r\n      3:Special Points : start\r\n      4:Special Points : end\r\n      5:Cells in Final Shortest Path\r\n      */\r\n\r\n  props.grid[props.start[0]][props.start[1]] = 3;\r\n  props.grid[props.end[0]][props.end[1]] = 4;\r\n\r\n  for (let i = 0; i < height; i++) {\r\n    const rowList = [];\r\n    for (let j = 0; j < width; j++) {\r\n      if (props.pointer &&\r\n          i === props.pointer[0] &&\r\n          j === props.pointer[1]) { // display the current pointer\r\n        rowList.push(\r\n            <div\r\n              key={i + j}\r\n              style={{\r\n                width: '35px',\r\n                height: '35px',\r\n                border: '1.5px solid black',\r\n                backgroundColor: '#69fff1',\r\n                WebkitUserSelect: 'none',\r\n              }}\r\n            >\r\n            </div>,\r\n        );\r\n      } else if (props.grid[i][j] === 5) { // cell in final shortest path\r\n        rowList.push(\r\n            <div\r\n              key={i + j}\r\n              style={{\r\n                width: '35px',\r\n                height: '35px',\r\n                border: '1.5px solid black',\r\n                backgroundColor: '#fee440',\r\n                WebkitUserSelect: 'none',\r\n              }}\r\n            >\r\n            </div>,\r\n        );\r\n      } else if (props.grid[i][j] === 3) {// start point\r\n        rowList.push(\r\n            <div\r\n              key={i + j}\r\n              style={{\r\n                width: '35px',\r\n                height: '35px',\r\n                border: '1.5px solid black',\r\n                backgroundColor: '#00ee00',\r\n                WebkitUserSelect: 'none',\r\n              }}\r\n            >\r\n            </div>,\r\n        );\r\n      } else if (props.grid[i][j] === 4) { // end point\r\n        rowList.push(\r\n            <div\r\n              key={i + j}\r\n              style={{\r\n                width: '35px',\r\n                height: '35px',\r\n                border: '1.5px solid black',\r\n                backgroundColor: '#ee0000',\r\n                WebkitUserSelect: 'none',\r\n              }}\r\n            >\r\n            </div>,\r\n        );\r\n      } else if (props.grid[i][j] === 1) { // This is a wall\r\n        rowList.push(\r\n            <div\r\n              key={i + j}\r\n              style={{\r\n                width: '35px',\r\n                height: '35px',\r\n                border: '1.5px solid black',\r\n                backgroundColor: '#540b0e',\r\n                WebkitUserSelect: 'none',\r\n              }}\r\n              onClick={() => props.changeState(i, j)}\r\n            >\r\n            </div>,\r\n        );\r\n      } else if (props.grid[i][j] === 2) { // this is a visited cell\r\n        rowList.push(\r\n            <div\r\n              key={i + j}\r\n              style={{\r\n                width: '35px',\r\n                height: '35px',\r\n                border: '1.5px solid black',\r\n                backgroundColor: '#fff3b0',\r\n                WebkitUserSelect: 'none',\r\n              }}\r\n              onClick={() => props.changeState(i, j)}\r\n            >\r\n            </div>,\r\n        );\r\n      } else { // This is an empty cell\r\n        rowList.push(\r\n            <div\r\n              key={i + j}\r\n              style={{\r\n                width: '35px',\r\n                height: '35px',\r\n                border: '1.5px solid black',\r\n                WebkitUserSelect: 'none',\r\n              }}\r\n              onClick={() => props.changeState(i, j)}\r\n            >\r\n            </div>,\r\n        );\r\n      }\r\n    }\r\n    gridList.push(rowList);\r\n  }\r\n  return (\r\n    <div className=\"p-4\">\r\n      {gridList.map((object, index) => {\r\n        return (\r\n          <div className=\"row justify-content-center flex-nowrap\" key = {index}>\r\n            {object}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\nGrid.propTypes = {\r\n  height: PropTypes.number,\r\n  width: PropTypes.number,\r\n  grid: PropTypes.array,\r\n  changeState: PropTypes.func,\r\n  start: PropTypes.array,\r\n  end: PropTypes.array,\r\n  pointer: PropTypes.array,\r\n  changeSource: PropTypes.bool,\r\n\r\n};\r\n\r\nexport default Grid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n/**\r\n *\r\n * @param {props} props\r\n * @return {*}\r\n * @constructor\r\n */\r\nclass Navbar extends React.Component {\r\n  /**\r\n   *@param {props} props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      selectedAlgo: props.currentAlgo,\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {event} event\r\n   */\r\n  handleChange(event) {\r\n    const algo = (event.target.getAttribute('id')).toString();\r\n    const setString = 'Visualize  ' + algo + '!';\r\n    document.getElementById('visualizebtn').innerHTML =\r\n        // eslint-disable-next-line max-len\r\n        '<button id=\"visualizebtn\" class=\"btn\" type=\"button\">'+ setString+'</ button>';\r\n\r\n    this.props.handle(algo);\r\n    this.setState({selectedAlgo: algo});\r\n  }\r\n  /**\r\n   *\r\n   * @return {*}\r\n   */\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-lg\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"navbar-header\">\r\n              <a id=\"refreshButton\" className=\"navbar-brand\" href=\"/App\">\r\n                {/* eslint-disable-next-line max-len */}\r\n                                Conquer Mars! <i className=\"fa fa-rocket\"/> <span className=\"icon\" /></a\r\n              >\r\n            </div>\r\n            <ul className=\"nav navbar-nav\">\r\n              <button onClick={this.props.toggleSource} className=\"btn\">\r\n                Change Source\r\n              </button>\r\n\r\n              <button onClick={this.props.toggleDestination} className=\"btn\">\r\n                Change Destination\r\n              </button>\r\n\r\n              <button\r\n                id=\"visualizebtn\"\r\n                className=\"btn\"\r\n                type=\"button\"\r\n                onClick={this.props.visual}\r\n              >\r\n                                Visualize\r\n              </button>\r\n              <li className=\"dropdown\">\r\n                <button\r\n                  className=\"btn dropdown-toggle\"\r\n                  type=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                >\r\n                                    Algorithms <span className=\"caret\"/>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                  <li id=\"dijkstra\"\r\n                    onMouseDown={(event) => this.handleChange(event)}>\r\n                                        Dijkstra Algorithm\r\n                  </li>\r\n                  <li id=\"a-star\"\r\n                    onMouseDown={(event) => this.handleChange(event)}>\r\n                                        A* Search\r\n                  </li>\r\n                  <li id=\"dfs\"\r\n                    onMouseDown={(event) => this.handleChange(event)}>\r\n                                        DFS\r\n                  </li>\r\n                  <li id=\"bfs\"\r\n                    onMouseDown={(event) => this.handleChange(event)}>\r\n                                        BFS\r\n                  </li>\r\n                  <li id=\"bestfs\"\r\n                    onMouseDown={(event) => this.handleChange(event)}>\r\n                                        Greedy best-first search\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li>\r\n                <button onClick={this.props.randomize} className=\"btn\">\r\n                                    Randomize\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button onClick = {this.props.clearWalls} className=\"btn\">\r\n                                    Clear Walls\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button className=\"btn\">\r\n                                    Clear Path\r\n                </button>\r\n              </li>\r\n              <li className=\"dropdown\">\r\n                <button\r\n                  className=\"btn dropdown-toggle\"\r\n                  type=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                >\r\n                                    Speed <span className=\"caret\"/>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                  <li onClick={()=> this.props.newSpeed(1)}>Fast\r\n                  </li>\r\n                  <li onClick={() => this.props.newSpeed(350)}>Medium\r\n                  </li>\r\n                  <li onClick={() => this.props.newSpeed(750)}>Slow\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nNavbar.propTypes = {\r\n  clearWalls: PropTypes.func,\r\n  randomize: PropTypes.func,\r\n  newSpeed: PropTypes.func,\r\n  currentAlgo: PropTypes.string,\r\n  selectAlgo: PropTypes.func,\r\n  visual: PropTypes.func,\r\n  handle: PropTypes.func,\r\n  toggleSource: PropTypes.func,\r\n  toggleDestination: PropTypes.func,\r\n  changeGrid: PropTypes.func,\r\n\r\n\r\n};\r\nexport default Navbar;\r\n","/**\r\n *\r\n */\r\nclass QElement {\r\n  /**\r\n   * @param {number} element\r\n   * @param {number} priority\r\n   */\r\n  constructor(element, priority) {\r\n    this.element = element;\r\n    this.priority = priority;\r\n  }\r\n}\r\n\r\n// PriorityQueue class\r\n/**\r\n *\r\n */\r\nexport default class PriorityQueue {\r\n  /**\r\n   *\r\n   */\r\n  constructor() {\r\n    this.items = [];\r\n  }\r\n\r\n  // enqueue function to add element\r\n  // to the queue as per priority\r\n  /**\r\n   * @param {number} element\r\n   * @param {number} priority\r\n   */\r\n  enqueue(element, priority) {\r\n    // creating object from queue element\r\n    const qElement = new QElement(element, priority);\r\n    let contain = false;\r\n\r\n    // iterating through the entire\r\n    // item array to add element at the\r\n    // correct location of the Queue\r\n    for (let i = 0; i < this.items.length; i++) {\r\n      if (this.items[i].priority > qElement.priority) {\r\n        // Once the correct location is found it is\r\n        // enqueued\r\n        this.items.splice(i, 0, qElement);\r\n        contain = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!contain) {\r\n      this.items.push(qElement);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {string|*}\r\n   */\r\n  dequeue() {\r\n    if (this.isEmpty()) {\r\n      return 'Underflow';\r\n    }\r\n    return this.items.shift();\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {string|*}\r\n   */\r\n  front() {\r\n    if (this.isEmpty()) {\r\n      return 'No elements in Queue';\r\n    }\r\n    return this.items[0];\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @return {string|*}\r\n   */\r\n\r\n  /**\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  isEmpty() {\r\n    // return true if the queue is empty.\r\n    return this.items.length === 0;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"./Grid\";\r\nimport Navbar from \"./Navbar\"\r\nimport Modal from  \"react-bootstrap/Modal\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport PriorityQueue from \"./priorityq\";\r\nconst D = ({ handleClose, show}) => {\r\n    return (\r\n        <>\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n                style={{\r\n                    opacity: \"90%\",\r\n                    backgroundColor: '#000000',\r\n                    color: '#fee440'\r\n                }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Uh-Oh!!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    PATH TO THE TARGET NOT FOUND!\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nclass App extends Component {\r\n    state = {\r\n        height: 20, // height of the grid\r\n        width: 20, // width of the grid\r\n        start: [10, 2], // start position\r\n        end: [10, 15], // end position\r\n        grid: Array(20).fill(undefined, undefined, undefined).map(() => Array(30).fill(0)),\r\n        speed: 50, // speed for animation\r\n        pointer: null, // store the pointer for visualization\r\n        modalshow: false,\r\n        heuristics:Array(20).fill(undefined, undefined, undefined).map(() => Array(30).fill(1000000000)),\r\n        path: [],\r\n        changeSource:false,\r\n        changeDestination:false,\r\n    };\r\n    constructor() {\r\n        super();\r\n        this.state.grid[this.state.start[0]][this.state.start[1]] = 3; // special point : start point\r\n        this.state.grid[this.state.end[0]][this.state.end[1]] = 4; // special point : end point\r\n        let heuristics = this.state.heuristics;\r\n        for(let i = 0; i < this.state.height; i++)\r\n        {\r\n            for(let j = 0; j < this.state.width; j++)\r\n            {\r\n                heuristics[i][j] = Math.abs(this.state.end[0]-i) + Math.abs(this.state.end[1]-j);\r\n            }\r\n        }\r\n        this.setState({heuristics});\r\n\r\n    }\r\n    changeGrid=(grid)=>this.setState(grid);\r\n    toggleSource=()=>this.setState({changeSource: !this.state.changeSource});\r\n    toggleDestination = ()=>this.setState({changeDestination: !this.state.changeDestination});\r\n    showModal = () => this.setState({ modalshow: true });\r\n    hideModal = () => this.setState({ modalshow: false });\r\n\r\n    randomizeMatrix = () => {\r\n        this.clearGrid();\r\n        const newGrid = Array(this.state.height).fill(undefined, undefined, undefined).map(() => Array(this.state.width).fill(0));\r\n        for (let i = 0; i < this.state.height; i++) {\r\n            for (let j = 0; j < this.state.width; j++) {\r\n                newGrid[i][j] = (Math.floor(Math.random() * 10) % 2); // random values of zero or one to generate a random grid of walls amd empty cells\r\n            }\r\n        }\r\n        newGrid[this.state.start[0]][this.state.start[1]] = 3; // special point : start\r\n        newGrid[this.state.end[0]][this.state.end[1]] = 4; // special point : end\r\n        this.setState({grid: newGrid});\r\n    }\r\n    clearGrid = () => {\r\n        const newGrid = Array(this.state.height).fill(undefined, undefined, undefined).map(() => Array(this.state.width).fill(0));\r\n        newGrid[this.state.start[0]][this.state.start[1]] = 3; // special point : start\r\n        newGrid[this.state.end[0]][this.state.end[1]] = 4; // special point : end\r\n        this.setState({grid: newGrid, pointer: null});\r\n    }\r\n    changeState = (x, y) => {\r\n        if (this.state.grid[x][y] === 3) return; // check if the current point is a special point (start or end)\r\n\r\n        let grid = this.state.grid;\r\n        if (grid[x][y] === 0 || grid[x][y] === 2) { // if it is a visited cell or empty , make it a wall\r\n            grid[x][y] = 1;\r\n        } else {  // convert a wall to empty cell\r\n            grid[x][y] = 0;\r\n        }\r\n\r\n        grid[this.state.start[0]][this.state.start[1]] = 3;\r\n        grid[this.state.end[0]][this.state.end[1]] = 4;\r\n        this.setState({grid: grid});\r\n    }\r\n    changeSpeed = (newSpeed) => {\r\n        if (this.state.speed !== newSpeed){\r\n            this.setState({speed: newSpeed});\r\n        }\r\n    }\r\n\r\n    selectAlgo = (name) => this.setState({currentAlgo: name});\r\n    visualize = async () => {\r\n        if (this.state.currentAlgo === \"dfs\") {\r\n            this.setState({path:[]});\r\n            let stack = [this.state.start];\r\n            let grid = this.state.grid;\r\n            let flag = 1;\r\n            let par = Array(this.state.height).fill(undefined, undefined, undefined).map(() => Array(this.state.width).fill(0));\r\n            par[this.state.start[0]][this.state.start[1]] = [this.state.start[0], this.state.start[1]];\r\n            let ok = true;\r\n            while (stack.length !== 0) {\r\n                const current = stack[stack.length - 1];\r\n                stack.pop();\r\n                if (current[0] < 0 || current[0] >= this.state.height){\r\n                    continue;\r\n                }\r\n                if (current[1] < 0 || current[1] >= this.state.width) {\r\n                    continue;\r\n                }\r\n                if (this.state.grid[current[0]][current[1]] === 2 || this.state.grid[current[0]][current[1]] === 1) {\r\n                    continue; // already visited or wall\r\n                }\r\n                if(this.state.grid[current[0]][current[1]] === 3)\r\n                {\r\n                    if(ok) {\r\n                        ok = false;\r\n                    }\r\n                    else {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                this.state.path = [...this.state.path, [current[0], current[1]]];\r\n                if (grid[current[0]][current[1]] === 4) {\r\n                    this.setState({grid: grid, pointer: current});\r\n                    await new Promise((done) => setTimeout(() => done(), this.state.speed));//To slow down the speed of Animation\r\n                    break;\r\n                } else {\r\n                    let list = [];  //temporary array to store next points\r\n                    list.push([current[0] + 1, current[1]]);  //Go right\r\n                    list.push([current[0], current[1] + 1]);  //Go Above\r\n                    list.push([current[0] - 1, current[1]]);   //Go Left\r\n                    list.push([current[0], current[1] - 1]);   //Go below\r\n\r\n                    if (grid[current[0]][current[1]] !== 3) {\r\n                        this.state.grid[current[0]][current[1]] = 2; // mark it as visited\r\n                    }\r\n                    stack = stack.concat(list);\r\n                }\r\n                this.setState({grid: grid, pointer: current});\r\n                await new Promise((done) => setTimeout(() => done(), this.state.speed));//To slow down the speed of Animation\r\n            }\r\n            if (flag === 0) this.setState({grid: grid});\r\n            if (this.state.pointer[0] !== this.state.end[0] || this.state.pointer[1] !== this.state.end[1])\r\n            {\r\n                this.showModal(); // return if path not found\r\n                return;\r\n            }\r\n\r\n            await this.pathdisplay(this.state.path);\r\n\r\n        }\r\n\r\n        if (this.state.currentAlgo === \"dijkstra\" || this.state.currentAlgo === \"bfs\") {\r\n            this.setState({path:[]});\r\n            let queue = [this.state.start];\r\n            let grid = this.state.grid;\r\n            let dist = Array(this.state.height).fill(undefined, undefined, undefined).map(() => Array(this.state.width).fill(1000000000));\r\n            let par = Array(this.state.height).fill(undefined, undefined, undefined).map(() => Array(this.state.width).fill(0));\r\n            dist[this.state.start[0]][this.state.start[1]] = 0;\r\n            par[this.state.start[0]][this.state.start[1]] = [this.state.start[0], this.state.start[1]];\r\n            let ok = true;\r\n            while (queue.length !== 0) {\r\n                const current = queue[0];\r\n                queue.shift(); // pop the queue\r\n                if (grid[current[0]][current[1]] === 1 || grid[current[0]][current[1]] === 2)\r\n                    continue;\r\n                if (grid[current[0]][current[1]] === 3) {\r\n                    if (ok) ok = false;\r\n                    else continue;\r\n                }\r\n                if (grid[current[0]][current[1]] === 4) {\r\n                    this.setState({grid: grid, pointer: current});\r\n                    await new Promise((done) => setTimeout(() => done(), this.state.speed));//To slow down the speed of Animation\r\n                    break;\r\n                } else {\r\n                    let list = [];\r\n                    if (current[0] !== this.state.height - 1 && grid[current[0] + 1][current[1]] !== 2) {\r\n                        if (dist[current[0] + 1][current[1]] > dist[current[0]][current[1]] + 1) {\r\n                            dist[current[0] + 1][current[1]] = dist[current[0]][current[1]] + 1;\r\n                            par[current[0] + 1][current[1]] = [current[0], current[1]];\r\n                        }\r\n                        list.push([current[0] + 1, current[1]]);\r\n                    }\r\n                    if (current[1] !== this.state.width - 1 && grid[current[0]][current[1] + 1] !== 2) {\r\n                        if (dist[current[0]][current[1] + 1] > dist[current[0]][current[1]] + 1) {\r\n                            dist[current[0]][current[1] + 1] = dist[current[0]][current[1]] + 1;\r\n                            par[current[0]][current[1] + 1] = [current[0], current[1]];\r\n                        }\r\n\r\n                        list.push([current[0], current[1] + 1]);\r\n                    }\r\n                    if (current[0] !== 0 && grid[current[0] - 1][current[1]] !== 2) {\r\n                        if (dist[current[0] - 1][current[1]] > dist[current[0]][current[1]] + 1) {\r\n                            dist[current[0] - 1][current[1]] = dist[current[0]][current[1]] + 1;\r\n                            par[current[0] - 1][current[1]] = [current[0], current[1]];\r\n                        }\r\n                        list.push([current[0] - 1, current[1]]);\r\n                    }\r\n                    if (current[1] !== 0 && grid[current[0]][current[1] - 1] !== 2) {\r\n                        if (dist[current[0]][current[1] - 1] > dist[current[0]][current[1]] + 1) {\r\n                            dist[current[0]][current[1] - 1] = dist[current[0]][current[1]] + 1;\r\n                            par[current[0]][current[1] - 1] = [current[0], current[1]];\r\n                        }\r\n                        list.push([current[0], current[1] - 1]);\r\n                    }\r\n                    if (grid[current[0]][current[1]] !== 3) {\r\n                        grid[current[0]][current[1]] = 2; // mark it as visited\r\n                    }\r\n                    this.setState({grid: grid, pointer: current});\r\n                    await new Promise((done) => setTimeout(() => done(), this.state.speed));//To slow down the speed of Animation\r\n                    queue = queue.concat(list);\r\n                }\r\n            }\r\n            if (this.state.pointer[0] !== this.state.end[0] || this.state.pointer[1] !== this.state.end[1])\r\n            {\r\n                this.showModal(); // return if path not found\r\n                return;\r\n            }\r\n            let ptr = [this.state.end[0],this.state.end[1]];\r\n            while(true)\r\n            {\r\n\r\n                this.state.path = [...this.state.path,ptr];\r\n                if(ptr[0] === this.state.start[0] && ptr[1] === this.state.start[1])\r\n                {\r\n                    break;\r\n                }\r\n                else\r\n                {\r\n                    ptr = par[ptr[0]][ptr[1]];\r\n                }\r\n            }\r\n            this.state.path = this.state.path.reverse();\r\n            await this.pathdisplay(this.state.path);\r\n        }\r\n        if(this.state.currentAlgo === \"bestfs\")\r\n        {\r\n            this.setState({path:[]});\r\n            let pq = new PriorityQueue();\r\n            pq.enqueue(this.state.start,this.state.heuristics[this.state.start[0]][this.state.start[1]]);\r\n            let path = Array(30)\r\n                .fill()\r\n                .map(() => Array(40).fill([]));\r\n            while(!pq.isEmpty())\r\n            {\r\n\r\n                let grid = this.state.grid;\r\n                let current = pq.front().element;\r\n                pq.dequeue();\r\n                this.setState({current});\r\n                if(grid[current[0]][current[1]] === 4)\r\n                {\r\n                    this.setState({ grid,pointer:current });\r\n                    break;\r\n                }\r\n                if (current[1] !== this.state.width - 1 && (grid[current[0]][current[1] + 1] === 0 || grid[current[0]][current[1] + 1] === 4))\r\n                {\r\n                    if (path[current[0]][current[1] + 1].length === 0 || path[current[0]][current[1] + 1].length > [...path[current[0]][current[1]], current].length) {\r\n                        pq.enqueue([current[0], current[1] + 1], this.state.heuristics[current[0]][current[1] + 1]);\r\n                        path[current[0]][current[1] + 1] = [...path[current[0]][current[1]], current,];\r\n                    }\r\n                }\r\n                if (current[0] !== this.state.height - 1 && (grid[current[0] + 1][current[1]] === 0) || grid[current[0] + 1][current[1]] === 4)\r\n                {\r\n                    if (path[current[0] + 1][current[1]].length === 0 || path[current[0] + 1][current[1]].length > [...path[current[0]][current[1]], current])\r\n                    {\r\n                        pq.enqueue([current[0] + 1, current[1]], this.state.heuristics[current[0] + 1][current[1]]);\r\n                        path[current[0] + 1][current[1]] = [...path[current[0]][current[1]], current,];\r\n                    }\r\n                }\r\n                if (current[0] !== 0 && (grid[current[0] - 1][current[1]] === 0 || (grid[current[0] - 1][current[1]] === 4)))\r\n                {\r\n                    if (path[current[0] - 1][current[1]].length === 0 || path[current[0] - 1][current[1]].length > [...path[current[0]][current[1]], current])\r\n                    {\r\n                        pq.enqueue([current[0] - 1, current[1]], this.state.heuristics[current[0] - 1][current[1]]);\r\n                        path[current[0] - 1][current[1]] = [...path[current[0]][current[1]], current,];\r\n                    }\r\n                }\r\n                if (current[1] !== 0 && (grid[current[0]][current[1] - 1] === 0 || (grid[current[0]][current[1]-1] === 4)))\r\n                {\r\n                    if (path[current[0]][current[1] - 1].length === 0 || path[current[0]][current[1] - 1].length > [...path[current[0]][current[1]], current].length)\r\n                    {\r\n                        pq.enqueue([current[0], current[1] - 1], this.state.heuristics[current[0]][current[1] - 1]);\r\n                        path[current[0]][current[1] - 1] = [...path[current[0]][current[1]],current,];\r\n                    }\r\n                }\r\n                grid[current[0]][current[1]] = 2;\r\n                this.setState({ grid,pointer:current });\r\n                await new Promise((done) => setTimeout(() => done(), 25)); //To slow down the animation\r\n            }\r\n\r\n            if (this.state.pointer[0] !== this.state.end[0] || this.state.pointer[1] !== this.state.end[1])\r\n            {\r\n                this.showModal(); // return if path not found\r\n                return;\r\n            }\r\n\r\n            this.state.path = path[this.state.end[0]][this.state.end[1]];\r\n\r\n            await this.pathdisplay(this.state.path);\r\n\r\n\r\n        }\r\n\r\n        if(this.state.currentAlgo === \"a-star\")\r\n        {\r\n            this.setState({path:[]});\r\n            let pq = new PriorityQueue();\r\n            pq.enqueue(this.state.start,this.state.heuristics[this.state.start[0]][this.state.start[1]]);\r\n            let dp = Array(30)\r\n                .fill()\r\n                .map(() => Array(40).fill([]));\r\n            while(!pq.isEmpty())\r\n            {\r\n\r\n                let grid = this.state.grid;\r\n                let current = pq.front().element;\r\n                pq.dequeue();\r\n                this.setState({current});\r\n                if(grid[current[0]][current[1]] === 4)\r\n                {\r\n                    this.setState({ grid,pointer:current });\r\n                    break;\r\n                }\r\n                if (current[1] !== this.state.width - 1 && (grid[current[0]][current[1] + 1] === 0 || grid[current[0]][current[1] + 1] === 4))\r\n                {\r\n                    if (dp[current[0]][current[1] + 1].length === 0 || dp[current[0]][current[1] + 1].length > [...dp[current[0]][current[1]], current].length) {\r\n                        pq.enqueue([current[0], current[1] + 1], dp[current[0]][current[1]].length+this.state.heuristics[current[0]][current[1] + 1]);\r\n                        dp[current[0]][current[1] + 1] = [...dp[current[0]][current[1]], current,];\r\n                    }\r\n                }\r\n                if (current[0] !== this.state.height - 1 && (grid[current[0] + 1][current[1]] === 0) || grid[current[0] + 1][current[1]] === 4)\r\n                {\r\n                    if (dp[current[0] + 1][current[1]].length === 0 || dp[current[0] + 1][current[1]].length > [...dp[current[0]][current[1]], current])\r\n                    {\r\n                        pq.enqueue([current[0] + 1, current[1]], dp[current[0]][current[1]].length+this.state.heuristics[current[0] + 1][current[1]]);\r\n                        dp[current[0] + 1][current[1]] = [...dp[current[0]][current[1]], current,];\r\n                    }\r\n                }\r\n                if (current[0] !== 0 && (grid[current[0] - 1][current[1]] === 0 || (grid[current[0] - 1][current[1]] === 4)))\r\n                {\r\n                    if (dp[current[0] - 1][current[1]].length === 0 || dp[current[0] - 1][current[1]].length > [...dp[current[0]][current[1]], current])\r\n                    {\r\n                        pq.enqueue([current[0] - 1, current[1]], dp[current[0]][current[1]].length+this.state.heuristics[current[0] - 1][current[1]]);\r\n                        dp[current[0] - 1][current[1]] = [...dp[current[0]][current[1]], current,];\r\n                    }\r\n                }\r\n                if (current[1] !== 0 && (grid[current[0]][current[1] - 1] === 0 || (grid[current[0]][current[1]-1] === 4)))\r\n                {\r\n                    if (dp[current[0]][current[1] - 1].length === 0 || dp[current[0]][current[1] - 1].length > [...dp[current[0]][current[1]], current].length)\r\n                    {\r\n                        pq.enqueue([current[0], current[1] - 1], dp[current[0]][current[1]].length+this.state.heuristics[current[0]][current[1] - 1]);\r\n                        dp[current[0]][current[1] - 1] = [...dp[current[0]][current[1]],current,];\r\n                    }\r\n                }\r\n                grid[current[0]][current[1]] = 2; // this node as visited\r\n                this.setState({ grid,pointer:current });\r\n                await new Promise((done) => setTimeout(() => done(), 25)); //To slow down the animation\r\n\r\n            }\r\n            if (this.state.pointer[0] !== this.state.end[0] || this.state.pointer[1] !== this.state.end[1])\r\n            {\r\n                this.showModal(); // return if path not found\r\n                return;\r\n            }\r\n            this.state.path = dp[this.state.end[0]][this.state.end[1]];\r\n            await this.pathdisplay(this.state.path);\r\n        }\r\n\r\n\r\n    }\r\n    pathdisplay = async (path) => {\r\n        let grid = this.state.grid;\r\n        for (let i = 1; i < path.length; i++) {\r\n            grid[path[i][0]][path[i][1]] = 5;\r\n            await new Promise((done) => setTimeout(() => done(), 25));\r\n            this.setState({grid: grid});\r\n        }\r\n        grid[this.state.end[0]][this.state.end[1]] = 5;\r\n        await new Promise((done) => setTimeout(() => done(), 25));\r\n        this.setState({grid: grid});\r\n        //To slow down the speed of Animation\r\n\r\n    }\r\n    clearPath = () => {\r\n        let grid = this.state.grid;\r\n        let path = this.state.path;\r\n        for(let i = 0; i < path.length; i++)\r\n        {\r\n            grid[path[i][0]][path[i][1]] = 2;\r\n        }\r\n        this.setState({path:[]});\r\n        this.setState({grid});\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Navbar randomize={this.randomizeMatrix} clearWalls={this.clearGrid} newSpeed={this.changeSpeed}\r\n                            handle={this.selectAlgo} selectedAlgo={this.currentAlgo} visual={this.visualize} clearPath = {this.clearPath}\r\n                            toggleSource= {this.toggleSource} toggleDestination= {this.toggleDestination}/>\r\n                </div>\r\n                <div>\r\n                    <Grid start={this.state.start} end={this.state.end} height={this.state.height}\r\n                          width={this.state.width} grid={this.state.grid} changeState={this.changeState}\r\n                          pointer={this.state.pointer} changeGrid = {this.changeGrid} changeSource = {this.state.changeSource} changeDestination = {this.state.changeDestination} />\r\n                </div>\r\n\r\n                <D show={this.state.modalshow} handleClose={this.hideModal} />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;","import React, {Component} from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './Home.css';\r\nimport Background from './LANDING.png';\r\n\r\nclass Welcome extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isChecked1: false,\r\n            isChecked2: false,\r\n            userAnswer: null,\r\n        };\r\n    }\r\n    toggleChange = (option) => {\r\n        if (option === 1) {\r\n            this.setState({isChecked1: true, isChecked2: false, userAnswer: 'True'});\r\n        } else {\r\n            this.setState({isChecked1: false, isChecked2: true, userAnswer: 'False'});\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Modal\r\n                    show={this.props.show}\r\n                    onHide={this.props.handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    style={{\r\n                        opacity: 0.95,\r\n                    }}\r\n\r\n                >\r\n                    <Modal.Header closeButton style={{\r\n                        backgroundColor: '#89daff',\r\n                        opacity: '100%',\r\n                    }}>\r\n                        <Modal.Title>Get Aboard!</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body style={{\r\n                        backgroundColor: '#89daff',\r\n                        opacity: '100%',\r\n                    }}>\r\n                        <div>{this.props.question}</div>\r\n                        <div>\r\n                            <label>\r\n                                <input type=\"checkbox\"\r\n                                       checked={this.state.isChecked1}\r\n                                       onChange={()=>this.toggleChange(1)}\r\n                                />\r\n                                True\r\n                            </label>\r\n                        </div>\r\n                        <div>\r\n                            <label>\r\n                                <input type=\"checkbox\"\r\n                                       checked={this.state.isChecked2}\r\n                                       onChange={()=>this.toggleChange(2)}\r\n                                />\r\n                                False\r\n                            </label>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer\r\n                        style={{\r\n                            backgroundColor: '#89daff',\r\n                            opacity: '100%',\r\n                        }}>\r\n                        <Button variant=\"danger\" onClick={this.props.handleClose} style={{\r\n                            backgroundColor: '#ff0000',\r\n                        }}>\r\n                            Try Later\r\n                        </Button>\r\n                        <Button variant=\"primary\" style={{\r\n                            backgroundColor: '#00ff00',\r\n                        }}\r\n                                onClick={()=>this.props.onSubmit(this.state.userAnswer)}>\r\n                            LETS GO!\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\nfunction httpGet(theUrl) {\r\n    const xmlHttp = new XMLHttpRequest();\r\n    xmlHttp.open( 'GET', theUrl, false ); // false for synchronous request\r\n    xmlHttp.send( null );\r\n    return xmlHttp.responseText;\r\n}\r\nclass Home extends Component {\r\n    state = {\r\n        show: false,\r\n        redirect: null,\r\n        question: null,\r\n        answer: null,\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let res = httpGet('https://opentdb.com/api.php?amount=1&category=18&type=boolean');\r\n            res = JSON.parse(res);\r\n            res = res['results'][0];\r\n            console.log(res);\r\n            this.setState({question: res['question'], answer: res['correct_answer']});\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    onSubmit(option) {\r\n        if (option === this.state.answer) {\r\n            this.setState({redirect: '/mars-colonization-project/App'});\r\n        } else {\r\n            alert('Wrong Option Chosen');\r\n        }\r\n    }\r\n    handleShow = () => {\r\n        this.setState({show: true});\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({show: false});\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirect !== null) {\r\n            return <Redirect to='/mars-colonization-project/App'/>;\r\n        }\r\n        return (\r\n\r\n            <div id = \"home\" style={{background: 'url(' + {Background} + ')', width: '100%', height: '100%', backgroundPosition: 'center', backgroundSize: 'cover', backgroundRepeat: 'no-repeat'}}>\r\n                <Button variant=\"primary\" onClick={this.handleShow} style={{\r\n                    backgroundColor: '#b8f2e6',\r\n                    color: '#242423',\r\n                    position: 'relative',\r\n                    margin: '25%',\r\n                }}>\r\n                    LAUNCH TO MARS\r\n                </Button>\r\n                <Welcome question = {this.state.question} answer = {this.state.answer} handleClose={this.handleClose} show={this.state.show} handleShow={this.handleShow} onSubmit={this.onSubmit.bind(this)}/>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport App from './App';\nimport Home from './components/Home';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\n/**\n *\n * @return {*}\n * @constructor\n */\nexport default function Root() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/mars-colonization-project\">\n          <Home />\n        </Route>\n        <Route path=\"/\">\n          <App />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n                console.log(\r\n                    'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n                );\r\n\r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n\r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: {'Service-Worker': 'script'},\r\n  })\r\n      .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n        // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n            'No internet connection found. App is running in offline mode.',\r\n        );\r\n      });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Root from './Root';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <Root />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}