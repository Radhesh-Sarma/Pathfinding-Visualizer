{"version":3,"sources":["media/mars7.jpg","media/mars-rover.svg","media/mars1.jpg","media/mars3.jpg","media/mars4.png","media/mars5.jpg","media/mars6.jpg","media/mars8.jpg","media/mars9.jpg","components/LANDING.png","components/Cell.js","components/Grid.js","components/Navbar.js","Algo/Utility.js","Algo/dfs.js","Algo/customPriorityQueue.js","Algo/Dijkstra.js","Algo/AStar.js","Algo/TSP.js","Algo/BFS.js","Algo/BiBFS.js","Algo/BiAstar.js","Algo/BidirectionalDijkstra.js","Algo/Graph.js","App.js","components/Home.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","currentPointer","props","i","j","key","style","width","height","border","backgroundColor","WebkitUserSelect","onClick","changeSource","toggleSource","changeState","src","rover","alt","finalShortestPath","changesourcefunc","changeDestination","changedestfunc","startPoint","endPoint","wall","onTouchStart","e","window","event","buttons","onMouseEnter","visited","visited2","empty","Grid","gridList","rowList","bi","pointer","pointer2","push","grid","parseInt","className","map","object","index","Navbar","state","selectedAlgo","currentAlgo","checkedA","this","document","getElementById","innerHTML","multiDestination","editButtons","setState","algo","target","getAttribute","toString","setString","handle","id","href","FormGroup","FormControlLabel","control","Switch","color","checked","onChange","hc","label","disabled","visual","toggleDestination","type","fontWeight","visualize","data-toggle","multipledestinations","onMouseDown","handleChange","randomize","clearWalls","clearPath","newSpeed","React","Component","directions","isFeasable","length","isFeasable2","neighbors","answer","direction","neighbor","biNeighbors","pathrestore","start","end","par","ptr","path","ok","reverse","DFS","a","flag","speed","Array","fill","stack","current","pop","Promise","done","setTimeout","concat","showModal","pathdisplay","parent","left","right","PriorityQueue","comparator","b","_heap","_comparator","size","values","forEach","value","_siftUp","poppedValue","peek","bottom","_swap","_siftDown","replacedValue","node","_greater","maxChild","Dijkstra","queue","dist","item","AStar","w1","w2","computeHeuristics","pq","heuristics","isEmpty","TSP","unvisited","Set","add","now","totalpath","pathfound","togo","findOptimalVertex","delete","sourceMapped","graph","map2","destinationMapped","allPairShortest","aStarForTSP","newpath","AppState","Math","abs","dp","source","BFS","shift","BiBFS","queue1","queue2","reached","isGoodCell","par1","par2","revcurrent","flag1","flag2","list1","list2","dir","neighbour1","neighbour2","breakpoint","ok1","undefined","pth2","BiAstar","reverseheuristics","reverseHeuristics","visited1","forwardPQ","backwardPQ","dist1","dist2","current1","current2","neighbor1","neighbor2","meetpoint2","meetpoint1","BidirectionalDijkstra","Graph","adjacencyList","map1","Map","counter","constructGraph","floydWarshall","vertex","destination","addVertex","isNotWall","x","y","addEdge","k","min","propTypes","PropTypes","array","Instruct","position","top","opacity","D","handleClose","show","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Footer","Button","variant","PathModal","pathlength","marginLeft","App","dfs","bind","bfs","dijkstra","aStar","tsp","biBFS","biAstar","bidirectionalDijkstra","changedSource","changedDestination","console","log","modalshow","hideModal","hidePathModal","pathmodal","randomizeMatrix","clearGrid","newGrid","floor","random","changeSpeed","selectAlgo","name","showInstruct","g","Welcome","toggleChange","option","isChecked1","isChecked2","userAnswer","question","onSubmit","httpGet","theUrl","xmlHttp","XMLHttpRequest","open","send","responseText","Home","redirect","handleShow","res","JSON","parse","replace","alert","to","background","Background","backgroundPosition","backgroundSize","backgroundRepeat","borderRadius","float","fontSize","textAlign","marginTop","scrollMarginTop","scrollMarginLeft","images","mars7","mars1","mars5","mars3","mars8","mars4","mars6","mars9","duration","transition","Root","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b705ac7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mars7.f9354f0a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars-rover.59452d47.svg\";","module.exports = __webpack_public_path__ + \"static/media/mars1.7a8733c3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars3.6a21f55b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars4.17d38c2f.png\";","module.exports = __webpack_public_path__ + \"static/media/mars5.548733ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars6.97edad93.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars8.474640cc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars9.4aee5d3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/LANDING.ee7b2b54.png\";","import rover from \"../media/mars-rover.svg\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nexport const currentPointer = function(props, i, j) {\r\n  return (<div\r\n    key={i + j}\r\n    style={{width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\r\n      backgroundColor: \"#69fff1\", WebkitUserSelect: \"none\",\r\n    }}\r\n    onClick={() => {\r\n      if (props.changeSource) {\r\n        props.toggleSource(i, j);\r\n      } else {\r\n        props.changeState(i, j);\r\n      }\r\n    }}\r\n  >\r\n    <img src={rover} alt='start' style={{width: \"25px\", height: \"25px\"}}/>\r\n  </div>);\r\n};\r\n\r\nexport const finalShortestPath = function(props, i, j) {\r\n  return ( <div\r\n    key={i + j}\r\n    style={{width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\r\n      backgroundColor: \"#fee440\", WebkitUserSelect: \"none\",\r\n    }}\r\n    onClick={() => {\r\n      if (props.changeSource) {\r\n        props.changesourcefunc(i, j);\r\n      } else if (props.changeDestination) {\r\n        props.changedestfunc(i, j);\r\n      } else {\r\n        props.changeState(i, j);\r\n      }\r\n    }}\r\n  >\r\n  </div>);\r\n};\r\nexport const startPoint = function(props, i, j) {\r\n  return (\r\n    <div\r\n      key={i + j}\r\n      style={{width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\r\n        backgroundColor: \"#71b340\", WebkitUserSelect: \"none\",\r\n      }}\r\n      onClick={() => {\r\n        if (props.changeSource) {\r\n          props.changesourcefunc(i, j);\r\n        } else if (props.changeDestination) {\r\n          props.changedestfunc(i, j);\r\n        } else {\r\n          props.changeState(i, j);\r\n        }\r\n      }\r\n      }\r\n    >\r\n    </div>);\r\n};\r\nexport const endPoint = function(props, i, j) {\r\n  return (\r\n    <div\r\n      key={i + j}\r\n      style={{\r\n        width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\r\n        backgroundColor: \"#ee0000\", WebkitUserSelect: \"none\",\r\n      }}\r\n      onClick={() => {\r\n        if (props.changeSource) {\r\n          props.changesourcefunc(i, j);\r\n        } else if (props.changeDestination) {\r\n          props.changedestfunc(i, j);\r\n        } else {\r\n          props.changeState(i, j);\r\n        }\r\n      }\r\n      }\r\n\r\n    >\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const wall = function(props, i, j) {\r\n  return (\r\n    <div\r\n      key={i + j}\r\n      style={{\r\n        width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\r\n        backgroundColor: \"#540b0e\", WebkitUserSelect: \"none\",\r\n      }}\r\n      onClick={() => {\r\n        if (props.changeSource) {\r\n          props.changesourcefunc(i, j);\r\n        } else if (props.changeDestination) {\r\n          props.changedestfunc(i, j);\r\n        } else {\r\n          props.changeState(i, j);\r\n        }\r\n      }}\r\n      onTouchStart={(e) => {\r\n        if (window.event.buttons === 1) {\r\n          props.changeState(i, j);\r\n        }\r\n      }\r\n      }\r\n      onMouseEnter={(e) => {\r\n        if (window.event.buttons === 1) {\r\n          props.changeState(i, j);\r\n        }\r\n      }\r\n      }\r\n    >\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const visited = function(props, i, j) {\r\n  return (\r\n    <div\r\n      key={i + j}\r\n      style={{\r\n        width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\r\n        backgroundColor: \"#e09891\", WebkitUserSelect: \"none\",\r\n      }}\r\n      onClick={() => {\r\n        if (props.changeSource) {\r\n          props.changesourcefunc(i, j);\r\n        } else if (props.changeDestination) {\r\n          props.changedestfunc(i, j);\r\n        } else {\r\n          props.changeState(i, j);\r\n        }\r\n      }}\r\n    >\r\n    </div>\r\n  );\r\n};\r\nexport const visited2 = function(props, i, j) {\r\n  return (\r\n    <div\r\n      key={i + j}\r\n      style={{\r\n        width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\r\n        backgroundColor: \"#666666\", WebkitUserSelect: \"none\",\r\n      }}\r\n      onClick={() => {\r\n        if (props.changeSource) {\r\n          props.changesourcefunc(i, j);\r\n        } else if (props.changeDestination) {\r\n          props.changedestfunc(i, j);\r\n        } else {\r\n          props.changeState(i, j);\r\n        }\r\n      }}\r\n    >\r\n    </div>\r\n  );\r\n};\r\nexport const empty = function(props, i, j) {\r\n  return ( <div\r\n    key={i + j}\r\n    style={{\r\n      width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\r\n      WebkitUserSelect: \"none\",\r\n    }}\r\n    onClick={() => {\r\n      if (props.changeSource) {\r\n        props.changesourcefunc(i, j);\r\n      } else if ((props.changeDestination)) {\r\n        props.changedestfunc(i, j);\r\n      } else {\r\n        props.changeState(i, j);\r\n      }\r\n    }}\r\n    onTouchStart={(e) => {\r\n      if (window.event.buttons === 1) {\r\n        props.changeState(i, j);\r\n      }\r\n    }\r\n    }\r\n    onMouseEnter={(e) => {\r\n      if (window.event.buttons === 1) {\r\n        props.changeState(i, j);\r\n      }\r\n    }\r\n    }\r\n  >\r\n  </div>);\r\n};\r\n\r\nempty.propTypes = {\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n  multipledestinations: PropTypes.bool,\r\n\r\n};\r\n\r\nvisited.propTypes = {\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n\r\n};\r\nvisited2.propTypes = {\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n\r\n};\r\n\r\nwall.propTypes ={\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n};\r\n\r\nfinalShortestPath.propTypes = {\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n};\r\n\r\n\r\nstartPoint.propTypes = {\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n};\r\n\r\nendPoint.propTypes = {\r\n  changeSource: PropTypes.bool,\r\n  changeDestination: PropTypes.bool,\r\n  changesourcefunc: PropTypes.func,\r\n  changedestfunc: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n};\r\n\r\ncurrentPointer.propTypes = {\r\n  changeSource: PropTypes.bool,\r\n  toggleSource: PropTypes.func,\r\n  changeState: PropTypes.func,\r\n};\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {currentPointer, wall, finalShortestPath, startPoint,\n  endPoint, visited, visited2, empty} from \"./Cell\";\n\n/**\n *\n * @param {props} props\n * @return {*}\n * @constructor\n */\nfunction Grid(props) {\n  const height = props.height; const width = props.width;\n  const gridList = [];\n\n  /* status of grid states for reference\n      0: normal cell\n      1:wall\n      2:visited during search\n      3:Special Points : start\n      4:Special Points : end\n      5:Cells in Final Shortest Path\n      */\n\n  for (let i = 0; i < height; i++) {\n    const rowList = [];\n    for (let j = 0; j < width; j++) {\n      if (!props.bi && props.pointer &&\n          i === props.pointer[0] &&\n          j === props.pointer[1]) {\n        rowList.push(currentPointer(props, i, j));\n      } else if (!props.bi && props.pointer2 &&\n          i === props.pointer2[0] &&\n          j === props.pointer2[1]) {\n        rowList.push(currentPointer(props, i, j));\n      } else if (props.grid[parseInt(i, 10)][parseInt(j, 10)] === 1) {\n        rowList.push(wall(props, i, j));\n      } else if (props.grid[parseInt(i, 10)][parseInt(j, 10)] === 2) {\n        rowList.push(visited(props, i, j));\n      } else if (props.grid[parseInt(i, 10)][parseInt(j, 10)] === 3) {\n        rowList.push(startPoint(props, i, j));\n      } else if (props.grid[parseInt(i, 10)][parseInt(j, 10)] === 4) {\n        rowList.push(endPoint(i, j));\n      } else if (props.grid[parseInt(i, 10)][parseInt(j, 10)] === 5) {\n        rowList.push(finalShortestPath(props, i, j));\n      } else if (props.grid[parseInt(i, 10)][parseInt(j, 10)] === 6) {\n        rowList.push(visited2(props, i, j));\n      } else {\n        rowList.push(empty(props, i, j));\n      }\n    }\n    gridList.push(rowList);\n  }\n  return (\n    <div className=\"p-4\">\n      {gridList.map((object, index) => {\n        return (\n          <div className=\"row justify-content-center flex-nowrap\" key = {index}>\n            {object}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nGrid.propTypes = {\n  height: PropTypes.number,\n  width: PropTypes.number,\n  grid: PropTypes.array,\n  changeState: PropTypes.func,\n  start: PropTypes.array,\n  end: PropTypes.array,\n  changeSource: PropTypes.bool,\n  changeDestination: PropTypes.bool,\n  changesourcefunc: PropTypes.func,\n  changedestfunc: PropTypes.func,\n  bi: PropTypes.bool,\n  pointer: PropTypes.array,\n  pointer2: PropTypes.array,\n};\n\nexport default Grid;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n/**\r\n *\r\n * @param {props} props\r\n * @return {*}\r\n * @constructor\r\n */\r\nclass Navbar extends React.Component {\r\n  /**\r\n   *@param {props} props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      selectedAlgo: props.currentAlgo,\r\n      checkedA: false,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * changes state in app when user toggles the switch for multiple destination\r\n   */\r\n  hc() {\r\n    if (!this.state.checkedA) {\r\n      this.editButtons();\r\n    } else {\r\n      document.getElementById(\"chngDestBtn\").innerHTML = \"Change Destination\";\r\n\r\n      this.props.multiDestination();\r\n    }\r\n    this.setState({checkedA: !this.state.checkedA});\r\n  }\r\n\r\n  /**\r\n   * Changes the buttons when multiple destination toggle is changed\r\n   */\r\n  editButtons() {\r\n    document.getElementById(\"chngDestBtn\").innerHTML = \"Add Destination\";\r\n\r\n    this.props.multiDestination();\r\n  }\r\n  /**\r\n   * Changes the Visualize Algo button according to the state\r\n   * @param {anything} event\r\n   */\r\n  handleChange(event) {\r\n    const algo = (event.target.getAttribute(\"id\")).toString();\r\n    const setString = \"Visualize  \" + algo + \"!\";\r\n    document.getElementById(\"visualizebtn\").innerHTML =\r\n        \"<button id='visualizebtn' \" +\r\n        \"class='btn' \" +\r\n        \"type='button' \" +\r\n        \"style='font-weight:bold'>\" +\r\n        setString +\r\n        \"</button>\";\r\n\r\n    this.props.handle(algo);\r\n    this.setState({selectedAlgo: algo});\r\n  }\r\n  /**\r\n   *\r\n   * @return {*}\r\n   */\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-lg\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"navbar-header\">\r\n              <a id=\"refreshButton\"\r\n                className=\"navbar-brand\"\r\n                href=\"/mars-colonization-project/App\">\r\n                {/* eslint-disable-next-line max-len */}\r\n                  Conquer Mars! <i className=\"fa fa-rocket\"/>\r\n                <span className=\"icon\" />\r\n              </a>\r\n            </div>\r\n            <ul className=\"navbar-nav\">\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={<Switch color = \"primary\"\r\n                    checked={this.state.checkedA}\r\n                    onChange={() => this.hc()} />\r\n                  }\r\n                  label=\"Multiple Destinations\"\r\n                  style={{color: \"peachpuff\"}}\r\n\r\n                />\r\n              </FormGroup>\r\n              <li className=\"nav-item\">\r\n                <button onClick={this.props.toggleSource}\r\n                  className=\"btn\"\r\n                  style={{\r\n                    backgroundColor: \"#71b340\",\r\n                  }}\r\n                  disabled={this.props.visual}\r\n                >\r\n                    Change Source\r\n                </button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <button onClick={this.props.toggleDestination}\r\n                        id=\"chngDestBtn\"\r\n                  className=\"btn\"\r\n                  style={{\r\n                    backgroundColor: \"#6a040f\",\r\n                    color: \"peachpuff\",\r\n                  }}\r\n                  disabled={this.props.visual}\r\n                >\r\n                    Change Destination\r\n                </button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n\r\n                <button\r\n                  id=\"visualizebtn\"\r\n                  className=\"btn\"\r\n                  type=\"button\"\r\n                  style={{fontWeight: \"bolder\"}}\r\n                  onClick={this.props.visualize}\r\n                  disabled={this.props.visual}\r\n                >\r\n                    Visualize\r\n                </button>\r\n              </li>\r\n              <li className=\"nav-item dropdown\"\r\n                id = \"AlgosList\">\r\n                <button\r\n                  className=\"btn dropdown-toggle\"\r\n                  type=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                  disabled={this.props.visual}\r\n                >\r\n                    Algorithms <span className=\"caret\"/>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                  <li >\r\n                    <button id=\"Dijkstra\"\r\n                      disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Dijkstra Algorithm</button>\r\n                  </li>\r\n                  <li >\r\n                    <button id=\"A*\"\r\n                      disabled={this.props.multipledestinations}\r\n                      onClick={(event) => this.handleChange(event)}>\r\n                        A* Search </button>\r\n                  </li>\r\n                  <li >\r\n                    <button id=\"DFS\"\r\n                      disabled={this.props.multipledestinations}\r\n                      onClick={(event) => this.handleChange(event)}>\r\n                        DFS </button>\r\n                  </li>\r\n                  <li >\r\n                    <button id=\"BFS\"\r\n                      disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        BFS</button>\r\n                  </li>\r\n                  <li >\r\n                    <button id=\"biDijkstra\"\r\n                      disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Bidirectional Dijkstra</button>\r\n                  </li>\r\n                  <li >\r\n                    <button id='biBFS'\r\n                      disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Bidirectional BFS </button>\r\n                  </li>\r\n                  <li>\r\n                    <button id='Best-FS'\r\n                      disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Greedy best-first search\r\n                    </button>\r\n                  </li>\r\n                  <li >\r\n                    <button id='TSP'\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Travelling Salesman\r\n                    </button>\r\n                  </li>\r\n                  <li >\r\n                    <button id='Weighted-AStar'\r\n                      disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Weighted A*\r\n                    </button>\r\n                  </li>\r\n                  <li >\r\n                    <button\r\n                      id='BiAstar'\r\n                      disabled={this.props.multipledestinations}\r\n                      onMouseDown={(event) => this.handleChange(event)}>\r\n                        Bidirectional A*\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <button onClick={this.props.randomize}\r\n                  className='btn'\r\n                  disabled={this.props.visual}>\r\n                    Randomize\r\n                </button>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <button onClick = {this.props.clearWalls}\r\n                  className='btn'\r\n                  disabled={this.props.visual}>\r\n                    Clear Board\r\n                </button>\r\n              </li>\r\n              <li className='nav-item'>\r\n                <button onClick = {this.props.clearPath}\r\n                  className='btn'\r\n                  disabled={this.props.visual}>\r\n                    Clear Path\r\n                </button>\r\n              </li>\r\n              <li className='nav-item dropdown'>\r\n                <button\r\n                  className='btn dropdown-toggle'\r\n                  type='button'\r\n                  data-toggle='dropdown'\r\n                  disabled={this.props.visual}\r\n                >\r\n                    Speed <span className='caret'/>\r\n                </button>\r\n                <ul className='dropdown-menu'>\r\n                  <li onClick={() => this.props.newSpeed(1)}>Fast\r\n                  </li>\r\n                  <li onClick={() => this.props.newSpeed(350)}>Medium\r\n                  </li>\r\n                  <li onClick={() => this.props.newSpeed(750)}>Slow\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n        <div className='d-flex flex-row flex-wrap m-2 justify-content-around'\r\n          id='Legend'>\r\n          <div className='d-flex p-2'>Start:\r\n            <div\r\n              style={{\r\n                width: \"20px\",\r\n                height: \"20px\",\r\n                backgroundColor: \"#71b340\",\r\n                WebkitUserSelect: \"none\",\r\n              }}\r\n            >\r\n            </div>\r\n          </div>\r\n          <div className='d-flex p-2'>End:\r\n            <div\r\n              style={{\r\n                width: \"20px\",\r\n                height: \"20px\",\r\n                backgroundColor: \"#ee0000\",\r\n                WebkitUserSelect: \"none\",\r\n              }}\r\n            >\r\n            </div>\r\n          </div>\r\n          <div className='d-flex p-2'>Wall:\r\n            <div\r\n              style={{\r\n                width: \"20px\",\r\n                height: \"20px\",\r\n                backgroundColor: \"#540b0e\",\r\n                WebkitUserSelect: \"none\",\r\n              }}\r\n            >\r\n            </div>\r\n          </div>\r\n          <div className='d-flex p-2'>Visited Node:\r\n            <div\r\n              style={{\r\n                width: \"20px\",\r\n                height: \"20px\",\r\n                backgroundColor: \"#e09891\",\r\n                WebkitUserSelect: \"none\",\r\n              }}\r\n            >\r\n            </div>\r\n          </div>\r\n          <div className='d-flex p-2'>Shortest Path Node:\r\n            <div\r\n              style={{\r\n                width: \"20px\",\r\n                height: \"20px\",\r\n                backgroundColor: \"#fee440\",\r\n                WebkitUserSelect: \"none\",\r\n              }}\r\n            >\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nNavbar.propTypes = {\r\n  clearWalls: PropTypes.func,\r\n  clearPath: PropTypes.func,\r\n  randomize: PropTypes.func,\r\n  newSpeed: PropTypes.func,\r\n  currentAlgo: PropTypes.string,\r\n  selectAlgo: PropTypes.func,\r\n  visualize: PropTypes.func,\r\n  visual: PropTypes.bool,\r\n  handle: PropTypes.func,\r\n  toggleSource: PropTypes.func,\r\n  toggleDestination: PropTypes.func,\r\n  changeGrid: PropTypes.func,\r\n  changeDestination: PropTypes.func,\r\n  multiDestination: PropTypes.func,\r\n  multipledestinations: PropTypes.bool,\r\n};\r\nexport default Navbar;\r\n","export const directions = [[1, 0], [0, 1], [-1, 0], [0, -1]];\nconst isFeasable = (i, j, grid) => {\n  if (i < 0 || i >=grid.length || j < 0 || j >=grid[0].length) {\n    return false;\n  }\n  return (grid[parseInt(i, 10)][parseInt(j, 10)] === 0 ||\n      grid[parseInt(i, 10)][parseInt(j, 10)] === 4);\n};\n\nconst isFeasable2 = (i, j, grid) => {\n  if (i < 0 || i >=grid.length || j < 0 || j >=grid[0].length) {\n    return false;\n  }\n  return !(grid[parseInt(i, 10)][parseInt(j, 10)] === 1 ||\n      grid[parseInt(i, 10)][parseInt(j, 10)] === 3 ||\n      grid[parseInt(i, 10)][parseInt(j, 10)] === 4);\n};\n\nexport const neighbors = (i, j, grid) => {\n  const answer = [];\n  for (const direction of directions) {\n    const neighbor = [i + direction[0], j + direction[1]];\n    if (isFeasable(neighbor[0], neighbor[1], grid)) {\n      answer.push([neighbor[0], neighbor[1]]);\n    }\n  }\n  return answer;\n};\n\nexport const biNeighbors = (i, j, grid) => {\n  const answer = [];\n  for (const direction of directions) {\n    const neighbor = [i + direction[0], j + direction[1]];\n    if (isFeasable2(neighbor[0], neighbor[1], grid)) {\n      answer.push([neighbor[0], neighbor[1]]);\n    }\n  }\n  return answer;\n};\n\nexport const pathrestore = (start, end, par) => {\n  let ptr = end[0];\n  let path = [];\n  let ok = true;\n  while (ok) {\n    path = [...path, ptr];\n    if (ptr[0] === start[0][0] &&\n        ptr[1] === start[0][1]) {\n      ok = false;\n    } else {\n      ptr = par[ptr[0]][ptr[1]];\n    }\n  }\n  return path.reverse();\n};\n\n","import {neighbors} from \"./Utility\";\nexport const DFS = async function() {\n  const grid = this.state.grid;\n  const flag = 1;\n  const start = this.state.start; const end = this.state.end;\n  const height = this.state.height; const width = this.state.width;\n  const speed = this.state.speed;\n  const par = Array(height).fill().map(() => Array(width).fill(0));\n  par[start[0][0]][start[0][1]] = [start[0][0], start[0][1]];\n  let stack = [start[0]]; // stack for dfs\n  let ok = true;\n  const path = [];\n  while (stack.length !== 0) {\n    const current = stack[stack.length - 1];\n    stack.pop(); // pop from stack\n    if (grid[current[0]][current[1]] === 3) {\n      if (ok) {\n        ok = false;\n      } else {\n        continue;\n      }\n    }\n    path.push([current[0], current[1]]);\n    if (grid[current[0]][current[1]] === 4) {\n      this.setState({grid, pointer: current});\n      await new Promise((done) =>\n        setTimeout(() => done(), this.state.speed));\n      break;\n    } else {\n      if (grid[current[0]][current[1]] !== 3) {\n        this.state.grid[current[0]][current[1]] = 2;\n      }\n      stack = stack.concat(neighbors(current[0], current[1], this.state.grid));\n    }\n    this.setState({grid, pointer: current});\n    await new Promise((done) =>\n      setTimeout(() => done(), speed));// To slow down the speed of Animation\n  }\n  if (flag === 0) {\n    this.setState({grid});\n  }\n  const pointer = this.state.pointer;\n  if (pointer[0] !== end[0][0] || pointer[1] !== end[0][1]) {\n    this.showModal();\n    this.setState({visual: false});\n    return;\n  }\n  await this.pathdisplay(path);\n};\n","\nconst top = 0;\nconst parent = (i) => ((i + 1) >>> 1) - 1;\nconst left = (i) => (i << 1) + 1;\nconst right = (i) => (i + 1) << 1;\n/**\n * from https://stackoverflow.com/a/42919752\n */\nclass PriorityQueue {\n  /**\n   *\n   * @param {anything} comparator\n   */\n  constructor(comparator = (a, b) => a < b) {\n    this._heap = [];\n    this._comparator = comparator;\n  }\n\n  /**\n   *  size of priority queue\n   * @return {number}\n   */\n  size() {\n    return this._heap.length;\n  }\n\n  /**\n   * returns if priority queue is empty\n   * @return {boolean}\n   */\n  isEmpty() {\n    return this.size() === 0;\n  }\n\n  /**\n   * returns the top element of priority queue\n   * @return {*}\n   */\n  peek() {\n    return this._heap[parseInt(top, 10)];\n  }\n\n  /**\n   * pushes values to the priority queue\n   * @param {anything} values\n   * @return {number}\n   */\n  push(...values) {\n    values.forEach((value) => {\n      this._heap.push(value);\n      this._siftUp();\n    });\n    return this.size();\n  }\n\n  /**\n   *  pop from priority queue\n   * @return {*}\n   */\n  pop() {\n    const poppedValue = this.peek();\n    const bottom = this.size() - 1;\n    if (bottom > top) {\n      this._swap(top, bottom);\n    }\n    this._heap.pop();\n    this._siftDown();\n    return poppedValue;\n  }\n\n  /**\n   *\n   * @param {number} value\n   * @return {*}\n   */\n  replace(value) {\n    const replacedValue = this.peek();\n    this._heap[parseInt(top, 10)] = value;\n    this._siftDown();\n    return replacedValue;\n  }\n\n  /**\n   *\n   * @param {number} i\n   * @param {number} j\n   * @return {boolean}\n   * @private\n   */\n  _greater(i, j) {\n    return this._comparator(this._heap[parseInt(i, 10)],\n        this._heap[parseInt(j, 10)]);\n  }\n\n  /**\n   *\n   * @param {number} i\n   * @param {number} j\n   * @private\n   */\n  _swap(i, j) {\n    [this._heap[parseInt(i, 10)], this._heap[parseInt(j, 10)]] =\n        [this._heap[parseInt(j, 10)], this._heap[parseInt(i, 10)]];\n  }\n\n  /**\n   *\n   * @private\n   */\n  _siftUp() {\n    let node = this.size() - 1;\n    while (node > top && this._greater(node, parent(node))) {\n      this._swap(node, parent(node));\n      node = parent(node);\n    }\n  }\n\n  /**\n   *\n   * @private\n   */\n  _siftDown() {\n    let node = top;\n    while (\n      (left(node) < this.size() && this._greater(left(node), node)) ||\n            (right(node) < this.size() && this._greater(right(node), node))\n    ) {\n      const maxChild = (right(node) < this.size() &&\n          this._greater(right(node), left(node))) ?\n          right(node) : left(node);\n      this._swap(node, maxChild);\n      node = maxChild;\n    }\n  }\n}\nexport default PriorityQueue;\n","import PriorityQueue from \"./customPriorityQueue\";\nimport {directions, pathrestore} from \"./Utility\";\n\nexport const Dijkstra = async function() {\n  const start = this.state.start; const end = this.state.end;\n  const height = this.state.height; const width = this.state.width;\n  const queue = new PriorityQueue((a, b) => a[1] < b[1]);\n  queue.push([start[0], 0]);\n  const grid = this.state.grid;\n  const dist = Array(height).fill().map(() =>\n    Array(width).fill(100000));\n  const par = Array(height).fill().map(() =>\n    Array(width).fill(0));\n  this.setState({path: [], pointer: start[0]});\n  dist[start[0][0]][start[0][1]] = 0;\n  par[start[0][0]][start[0][1]] =\n      [start[0][0], start[0][1]];\n  let ok = true;\n  while (queue.size() !== 0) {\n    const current = queue.peek()[0];\n    queue.pop(); // pop the queue\n    if (grid[current[0]][current[1]] === 3) {\n      if (ok) {\n        ok = false;\n      } else {\n        continue;\n      } // if you are again pushing the source point, its !ok\n    }\n    if (grid[current[0]][current[1]] === 4) {\n      // if you reach the destination, terminate\n      this.setState({grid, pointer: current});\n      await new Promise((done) =>\n        setTimeout(() => done(), this.state.speed));\n      break;\n    } else {\n      // dijkstra picks the minimum weight path,\n      // updates it in its distance array\n      const item = [];\n      for (const direction of directions) {\n        const neighbor = [current[0] + direction[0], current[1] + direction[1]];\n        if (neighbor[0] < 0 || neighbor[0] >= grid.length ||\n            neighbor[1] < 0 || neighbor[1] >=grid[0].length) {\n          continue;\n        }\n        if (grid[neighbor[0]][neighbor[1]] !== 1) {\n          item.push([neighbor[0], neighbor[1]]); // if not a wall\n        }\n      }\n      // iterate over non wall neighbors\n      for (const neighbor of item) {\n        if (dist[neighbor[0]][neighbor[1]] >\n            dist[current[0]][current[1]] + 1) {\n          dist[neighbor[0]][neighbor[1]] = dist[current[0]][current[1]] + 1;\n          par[neighbor[0]][neighbor[1]] = [current[0], current[1]];\n          queue.push([[neighbor[0], neighbor[1]],\n            dist[neighbor[0]][neighbor[1]]]);\n          // push in the queue if the current vertex can give a shorter path\n          // than previous used vertices\n        }\n      }\n      if (grid[current[0]][current[1]] !== 3) {\n        grid[current[0]][current[1]] = 2; // mark it as visited\n      }\n      this.setState({grid, pointer: current});\n      await new Promise((done) =>\n        setTimeout(() => done(), this.state.speed));\n    }\n  }\n  if (this.state.pointer[0] !== end[0][0] ||\n      this.state.pointer[1] !== end[0][1]) {\n    this.showModal(); // return if path not found\n    this.setState({visual: false});\n    return;\n  }\n  this.state.path = pathrestore(start, end, par);\n  await this.pathdisplay(this.state.path);\n};\n","import PriorityQueue from \"./customPriorityQueue\";\nimport {neighbors, pathrestore} from \"./Utility\";\nexport const AStar = async function(w1, w2) {\n  this.computeHeuristics();\n  this.setState({path: [], pointer: this.state.start[0]});\n  const height = this.state.height; const width = this.state.width;\n  const pq = new PriorityQueue((a, b) => a[1] < b[1]);\n  const start = this.state.start; const end = this.state.end;\n  const heuristics = this.state.heuristics; const speed = this.state.speed;\n  pq.push([start[0], heuristics[start[0][0]][start[0][1]]]);\n  const par = Array(height).fill().map(() => Array(width).fill([]));\n  par[start[0][0]][start[0][1]] = start[0];\n  const dist = Array(height).fill().map(() =>\n    Array(width).fill(100000));\n  dist[start[0][0]][start[0][1]] = 0;\n  while (!pq.isEmpty()) {\n    const grid = this.state.grid;\n    const current = pq.peek()[0];\n    pq.pop();\n    this.setState({pointer: current});\n    if (grid[current[0]][current[1]] === 4) {\n      this.setState({grid, pointer: current});\n      break;\n    }\n    const neighbor = neighbors(current[0], current[1], this.state.grid);\n    for (const item of neighbor) {\n      if (dist[item[0]][item[1]] === 100000 ||\n          dist[current[0][current[1]]] + 1 < dist[item[0]][item[1]]) {\n        dist[item[0]][item[1]] = dist[current[0]][current[1]] + 1;\n        par[item[0]][item[1]] = current;\n        pq.push([item, w1*dist[item[0]][item[1]] +\n        w2*heuristics[item[0]][item[1]]]);\n      }\n    }\n    grid[current[0]][current[1]] = 2;\n    this.setState({grid, pointer: current});\n    await new Promise((done) =>\n      setTimeout(() => done(), speed));\n  }\n  const pointer = this.state.pointer;\n  if (pointer[0] !== end[0][0] || pointer[1] !== end[0][1]) {\n    this.showModal(); // return not found\n    this.setState({visual: false});\n    return;\n  }\n  this.state.path = pathrestore(start, end, par);\n  await this.pathdisplay(this.state.path);\n};\n","import PriorityQueue from \"./customPriorityQueue\";\nexport const TSP = async function() {\n  const unvisited = new Set();\n  for (const item of this.state.end) {\n    unvisited.add(item);\n  }\n  let now = this.state.start[0];\n  let totalpath = [];\n  let pathfound = true;\n  while (unvisited.size) {\n    const togo = this.findOptimalVertex(this, unvisited, now);\n    unvisited.delete(togo);\n    const sourceMapped = this.state.graph.map2[now];\n    const destinationMapped = this.state.graph.map2[togo];\n    if (this.state.graph.allPairShortest[sourceMapped][destinationMapped] ===\n        1000000) {\n      pathfound = false;\n      break;\n    }\n    const newpath = await this.aStarForTSP(this, now, togo);\n    totalpath = totalpath.concat(newpath);\n    now = togo;\n  }\n  if (pathfound) {\n    await this.pathdisplay(totalpath);\n  } else {\n    this.showModal();\n    this.setState({visual: false});\n    return;\n  }\n};\n\nexport const aStarForTSP = async function(AppState, start, end) {\n  const heuristics = AppState.state.heuristics;\n  for (let i = 0; i < AppState.state.height; i++) {\n    for (let j = 0; j < AppState.state.width; j++) {\n      heuristics[parseInt(i, 10)][parseInt(j, 10)] =\n          Math.abs(end[0]-i) + Math.abs(end[1]-j);\n    }\n  }\n  AppState.setState({heuristics,\n    path: [], pointer: start, bi: true});\n  const pq = new PriorityQueue((a, b) => a[1] < b[1]);\n  pq.push([start, AppState.state.heuristics[start[0]][start[1]]]);\n  const dp = Array(30)\n      .fill()\n      .map(() => Array(40).fill([]));\n  while (!pq.isEmpty()) {\n    const grid = AppState.state.grid;\n    const current = pq.peek()[0];\n    pq.pop();\n    AppState.setState({current});\n    if (grid[current[0]][current[1]] === 4) {\n      AppState.setState({grid, pointer: current});\n      break;\n    }\n    if (current[1] !== AppState.state.width - 1 &&\n        (grid[current[0]][current[1] + 1] === 0 ||\n            grid[current[0]][current[1] + 1] === 4)) {\n      if (dp[current[0]][current[1] + 1].length === 0 ||\n          dp[current[0]][current[1] + 1].length >\n          [...dp[current[0]][current[1]], current].length) {\n        pq.push([[current[0], current[1] + 1],\n          dp[current[0]][current[1]].length+\n          AppState.state.heuristics[current[0]][current[1] + 1]]);\n        dp[current[0]][current[1] + 1] =\n            [...dp[current[0]][current[1]], current];\n      }\n    }\n    if (current[0] !== AppState.state.height - 1 &&\n        ((grid[current[0] + 1][current[1]] === 0) ||\n            grid[current[0] + 1][current[1]] === 4)) {\n      if (dp[current[0] + 1][current[1]].length === 0 ||\n          dp[current[0] + 1][current[1]].length >\n          [...dp[current[0]][current[1]], current]) {\n        pq.push([[current[0] + 1, current[1]],\n          dp[current[0]][current[1]].length+\n          AppState.state.heuristics[current[0] + 1][current[1]]]);\n        dp[current[0] + 1][current[1]] =\n            [...dp[current[0]][current[1]], current];\n      }\n    }\n    if (current[0] !== 0 && (grid[current[0] - 1][current[1]] === 0 ||\n        (grid[current[0] - 1][current[1]] === 4))) {\n      if (dp[current[0] - 1][current[1]].length === 0 ||\n          dp[current[0] - 1][current[1]].length >\n          [...dp[current[0]][current[1]], current]) {\n        pq.push([[current[0] - 1,\n          current[1]], dp[current[0]][current[1]].length+\n        AppState.state.heuristics[current[0] - 1][current[1]]]);\n        dp[current[0] - 1][current[1]] =\n            [...dp[current[0]][current[1]], current];\n      }\n    }\n    if (current[1] !== 0 && (grid[current[0]][current[1] - 1] === 0 ||\n        (grid[current[0]][current[1]-1] === 4))) {\n      if (dp[current[0]][current[1] - 1].length === 0 ||\n          dp[current[0]][current[1] - 1].length >\n          [...dp[current[0]][current[1]], current].length) {\n        pq.push([[current[0], current[1] - 1],\n          dp[current[0]][current[1]].length+\n          AppState.state.heuristics[current[0]][current[1] - 1]]);\n        dp[current[0]][current[1] - 1] =\n            [...dp[current[0]][current[1]], current];\n      }\n    }\n    grid[current[0]][current[1]] = 2; // AppState node as visited\n    AppState.setState({grid, pointer: current});\n    await new Promise((done) =>\n      setTimeout(() => done(), AppState.state.speed));\n  }\n  const grid = AppState.state.grid;\n  for (let i = 0; i < AppState.state.height; i++) {\n    for (let j = 0; j < AppState.state.width; j++) {\n      if (grid[parseInt(i, 10)][parseInt(j, 10)] ===2) {\n        grid[parseInt(i, 10)][parseInt(j, 10)] = 0;\n      }\n    }\n  }\n  grid[start[0]][start[1]] = 0;\n  grid[end[0]][end[1]] = 3;\n  await AppState.setState({grid});\n  return dp[end[0]][end[1]];\n};\n/**\n * This returns the nearest unvisited destination\n * @param {anyObject} AppState\n * @param {number} unvisited\n * @param {number} source\n * @return {*}\n */\nexport const findOptimalVertex = (AppState, unvisited, source) => {\n  const pq = new PriorityQueue((a, b) => a[1] < b[1]);\n  const sourceMapped = AppState.state.graph.map2[source];\n  for (const item of unvisited) {\n    const destinationMapped = AppState.state.graph.map2[item];\n    pq.push([item,\n      AppState.state.graph.allPairShortest[sourceMapped][destinationMapped]]);\n  }\n  return pq.peek()[parseInt(0, 10)];\n};\n","import {neighbors, pathrestore} from \"./Utility\";\nexport const BFS = async function() {\n  const start = this.state.start; const end = this.state.end;\n  const height = this.state.height; const width = this.state.width;\n  const speed = this.state.speed; const grid = this.state.grid;\n  this.setState({pointer: start[0]});\n  const queue = [start[0]]; // queue needed in bfs\n  const par = Array(height).fill().map(() => Array(width).fill([]));\n  // parent array to restore the path\n  par[start[0][0]][start[0][1]] = start[0];\n  let ok = true;\n  // grid is acting like a visited array in BFS\n  while (queue.length !== 0) {\n    const current = queue[0];\n    queue.shift(); // pop the first item from the queue\n    if (grid[current[0]][current[1]] === 1 ||\n        grid[current[0]][current[1]] === 2) {\n      continue;\n      // if its a wall or already visited cell then continue\n    }\n    if (grid[current[0]][current[1]] === 3) {\n      // check if again visits the start point\n      if (ok) {\n        ok = false;\n      } else {\n        continue;\n      }\n    }\n    if (grid[current[0]][current[1]] === 4) {\n      // reached goal, so terminate\n      this.setState({grid});\n      this.setState({pointer: current});\n      await new Promise((done) =>\n        setTimeout(() => done(), speed));\n      break;\n    } else {\n      const item = neighbors(current[0], current[1], this.state.grid);\n      // finding neighbours of the current cell which are unvisited and empty\n      for (const neighbor of item) {\n        par[neighbor[0]][neighbor[1]] = [current[0], current[1]];\n        queue.push([neighbor[0], neighbor[1]]);\n        // push the unvisited neighbours in the queue\n      }\n      if (grid[current[0]][current[1]] !== 3) {\n        grid[current[0]][current[1]] = 2;\n        // if not end/start, mark the node as visited\n      }\n      this.setState({grid, pointer: current});\n      // update the state\n      await new Promise((done) =>\n        setTimeout(() => done(), speed)); // to slow down the speed of animation\n    }\n  }\n  const pointer = this.state.pointer;\n  if (pointer[0] !== end[0][0] || pointer[1] !== end[0][1]) {\n    // display path not found\n    this.showModal();\n    this.setState({visual: false});\n    return;\n  }\n  // restore path\n  this.state.path = pathrestore(start, end, par);\n  await this.pathdisplay(this.state.path);\n};\n","export const BiBFS = async function() {\n  this.setState({path: [], pointer:\n  this.state.start[0], pointer2: this.state.end[0]});\n  let queue1 = [this.state.start[0]]; let queue2 = [this.state.end[0]];\n  const height = this.state.height; const width = this.state.width;\n  const grid = this.state.grid;\n  const directions = [[0, 1], [1, 0], [0, -1], [-1, 0]];\n  let reached = true;\n  const isGoodCell = (i, j) => {\n    if (i < 0 || i >=height || j < 0 || j >=width) {\n      return false;\n    }\n    return !(grid[parseInt(i, 10)][parseInt(j, 10)] === 1 ||\n        grid[parseInt(i, 10)][parseInt(j, 10)]=== 3 ||\n        grid[parseInt(i, 10)][parseInt(j, 10)] === 4);\n  };\n  const start = this.state.start[0]; const end = this.state.end[0];\n  const par1 = Array(height).fill().map(() => Array(width).fill([]));\n  const par2 = Array(height).fill().map(() => Array(width).fill([]));\n  const visited = Array(height).fill().map(() => Array(width).fill(0));\n  par1[start[0]][start[1]] = start; par2[end[0]][end[1]] = end;\n  let ptr;\n  while (queue1.length !==0 && queue2.length !== 0) {\n    const current = queue1[0]; // current of forward path\n    const revcurrent = queue2[0]; // current pointer of reverse path\n    let flag1=false; let flag2=false;\n    if (visited[current[0]][current[1]] === 2) {\n      ptr = current; break;\n    } else {\n      visited[current[0]][current[1]] = 1;\n    }\n    if (visited[revcurrent[0]][revcurrent[1]] === 1) {\n      ptr = revcurrent; break;\n    } else {\n      visited[revcurrent[0]][revcurrent[1]] = 2;\n    }\n    queue1.shift();\n    queue2.shift();\n    const list1 = [];\n    const list2 = [];\n    for (const dir of directions) {\n      const neighbour1 = [current[0] + dir[0], current[1] + dir[1]];\n      if (isGoodCell(neighbour1[0], neighbour1[1])) {\n        if (visited[neighbour1[0]][neighbour1[1]] === 1 ||\n            grid[neighbour1[0]][neighbour1[1]] === 2) {\n          continue;\n        }\n        par1[neighbour1[0]][neighbour1[1]] = current;\n        if (visited[neighbour1[0]][neighbour1[1]] === 2 ) {\n          ptr=neighbour1; flag1=true; break;\n        }\n        if ( neighbour1[0]===start[0] && neighbour1[1]===start[1]) {\n          continue;\n        }\n        list1.push(neighbour1);\n        grid[neighbour1[0]][neighbour1[1]] = 2;\n      }\n    }\n    queue1 = queue1.concat(list1);\n    if (flag1) {\n      break;\n    }\n    for (const dir of directions) {\n      const neighbour2 = [revcurrent[0] + dir[0], revcurrent[1] + dir[1]];\n      if (isGoodCell(neighbour2[0], neighbour2[1])) {\n        if (visited[neighbour2[0]][neighbour2[1]] === 2 ||\n            grid[neighbour2[0]][neighbour2[1]] === 6) {\n          continue;\n        }\n        par2[neighbour2[0]][neighbour2[1]] = revcurrent;\n        if (visited[neighbour2[0]][neighbour2[1]] === 1 ) {\n          ptr = neighbour2; flag2=true; break;\n        }\n        if (neighbour2[0]===end[0] && neighbour2[1]===end[1]) {\n          continue;\n        }\n        list2.push(neighbour2);\n        grid[neighbour2[0]][neighbour2[1]] = 6;\n      }\n    }\n    queue2 = queue2.concat(list2);\n    this.setState({grid,\n      pointer: current, pointer2: revcurrent, bi: true});\n    await new Promise((done) =>\n      setTimeout(() => done(), this.state.speed));\n    // To slow down the speed of Animation\n    if (flag1 || flag2) {\n      break;\n    }\n  }\n  const breakpoint = ptr;\n  let ok1 = true;\n  while (ok1) {\n    this.state.path = [...this.state.path, ptr];\n    if (ptr === undefined) {\n      reached = false;\n      ok1 = false;\n    } else if (ptr[0] === this.state.start[0][0] &&\n        ptr[1] === this.state.start[0][1]) {\n      ok1 = false;\n    } else {\n      ptr = par1[ptr[0]][ptr[1]];\n    }\n  }\n  if (!reached) {\n    this.showModal(); // return not found\n    this.setState({visual: false});\n    return;\n  }\n  this.state.path = this.state.path.reverse();\n  ptr = breakpoint;\n  let pth2= [];\n  let ok = true;\n  while (ok) {\n    pth2 = [...pth2, ptr];\n    if (ptr === undefined) {\n      reached = false;\n      ok = false;\n      break;\n    } else if (ptr[0] === this.state.end[0][0] &&\n        ptr[1] === this.state.end[0][1]) {\n      ok = false;\n      break;\n    } else {\n      ptr = par2[ptr[0]][ptr[1]];\n    }\n  }\n  if (!reached) {\n    this.showModal(); // return not found\n    this.setState({visual: false});\n    return;\n  }\n  pth2 = pth2.reverse();\n  this.state.path = this.state.path.concat(pth2);\n  await this.pathdisplay(this.state.path);\n};\n","import PriorityQueue from \"./customPriorityQueue\";\nimport {biNeighbors} from \"./Utility\";\nexport const BiAstar = async function() {\n  this.computeHeuristics();\n  const heuristics = this.state.heuristics;\n  const reverseheuristics = this.state.reverseHeuristics;\n  const start = this.state.start[0];\n  const end = this.state.end[0];\n  const height = this.state.height; const width = this.state.width;\n  let meetpoint1; let meetpoint2; // the breakpoint from either direction\n  this.setState({pointer: start[0], pointer2: end[0], bi: true});\n  const visited1 = Array(height).fill().map(() =>\n    Array(width).fill(0));\n  // visited array to aid finding and stopping at common points\n  const visited2 = Array(height).fill().map(() =>\n    Array(width).fill(0));\n  const forwardPQ = new PriorityQueue((a, b) => a[1] < b[1]);\n  // forward PQ for points from Start end\n  const backwardPQ = new PriorityQueue((a, b) => a[1] < b[1]);\n  // Priority queue for points from the other end\n  forwardPQ.push([start, 0]);\n  backwardPQ.push([end, 0]);\n  // Parent arrays to restore the path\n  const par1 = Array(height).fill().map(() => Array(width).fill([]));\n  const par2 = Array(height).fill().map(() => Array(width).fill([]));\n  par1[start[0]][start[1]] = start;\n  par2[end[0]][end[1]] = end;\n  let reached = true;\n  let ok = 0;\n  // initialising the distance array to a Maxima\n  const dist1 = Array(height).fill().map(() =>\n    Array(width).fill(100000));\n  const dist2 = Array(height).fill().map(() =>\n    Array(width).fill(100000));\n  dist1[start[0]][start[1]] = 0;\n  dist2[end[0]][end[1]] = 0;\n\n  while (!forwardPQ.isEmpty() && !backwardPQ.isEmpty()) {\n    const grid = this.state.grid;\n    const current1 = forwardPQ.peek()[0];\n    const current2 = backwardPQ.peek()[0];\n    this.setState({pointer: current1, pointer2: current2});\n    await new Promise((done) =>\n      setTimeout(() => done(), this.state.speed));\n    visited1[current1[0]][current1[1]] = 1; // marking current pointers visited\n    visited2[current2[0]][current2[1]] = 1;\n    forwardPQ.pop(); backwardPQ.pop();\n    const neighbor1 = biNeighbors(current1[0], current1[1], this.state.grid);\n    const neighbor2 = biNeighbors(current2[0], current2[1], this.state.grid);\n    for (const item of neighbor1) {\n      // iterating over the neighbours from front\n      if (item[0] === start[0] && item[1] === start[1]) {\n        continue;\n      }\n      if (visited2[item[0]][item[1]] === 1) {\n        meetpoint2 = item; meetpoint1 = current1;\n        ok = 1;\n        break;\n      }\n\n      if ( dist1[current1[0]][current1[1]] + 1< dist1[item[0]][item[1]]) {\n        dist1[item[0]][item[1]] = dist1[current1[0]][current1[1]] + 1;\n        par1[item[0]][item[1]] = current1;\n        forwardPQ.push([item,\n          dist1[item[0]][item[1]] + heuristics[item[0]][item[1]]]);\n      }\n    }\n    if (ok === 1) {\n      break;\n    }\n    // iterating over neighbours from back\n    for (const item of neighbor2) {\n      if (item[0] === end[0] && item[1] === end[1]) {\n        continue;\n      }\n\n      if (visited1[item[0]][item[1]] === 1) {\n        meetpoint2 = current2;\n        meetpoint1 = item;\n        ok = 1;\n        break;\n      }\n      if ( dist2[current2[0]][current2[1]] + 1< dist2[item[0]][item[1]]) {\n        dist2[item[0]][item[1]] = dist2[current2[0]][current2[1]] + 1;\n        par2[item[0]][item[1]] = current2;\n        backwardPQ.push([item,\n          dist2[item[0]][item[1]] + reverseheuristics[item[0]][item[1]]] );\n      }\n    }\n    grid[current1[0]][current1[1]] = 2;\n    grid[current2[0]][current2[1]] = 6;\n    grid[start[0]][start[1]]=3;\n    grid[end[0]][end[1]]=4;\n    this.setState({grid});\n    if (ok === 1) {\n      break;\n    }\n  }\n  // Retrieving the found path\n  let ptr = meetpoint1;\n  let ok1 = true;\n  while (ok1) {\n    this.state.path = [...this.state.path, ptr];\n    if (ptr === undefined) {\n      reached = false;\n      ok1 = false;\n    } else if (ptr[0] === start[0] && ptr[1] === start[1]) {\n      ok1 = false;\n    } else {\n      ptr = par1[ptr[0]][ptr[1]];\n    }\n  }\n  if (!reached) {\n    this.showModal(); // return not found\n    this.setState({visual: false});\n    return;\n  }\n  this.state.path = this.state.path.reverse();\n  ptr = meetpoint2;\n  let pth2= [];\n  ok = true;\n  while (ok) {\n    pth2 = [...pth2, ptr];\n    if (ptr === undefined) {\n      reached = false;\n      ok = false;\n    } else if (ptr[0] === end[0] && ptr[1] === end[1]) {\n      ok = false;\n    } else {\n      ptr = par2[ptr[0]][ptr[1]];\n    }\n  }\n  if (!reached) {\n    this.showModal(); // return not found\n    this.setState({visual: false});\n    return;\n  }\n  pth2 = pth2.reverse();\n  this.state.path = this.state.path.concat(pth2);\n  // console.log(this.state.path);\n  await this.pathdisplay(this.state.path);\n};\n","import PriorityQueue from \"./customPriorityQueue\";\nimport {biNeighbors} from \"./Utility\";\nexport const BidirectionalDijkstra = async function() {\n  const start = this.state.start[0];\n  const end = this.state.end[0];\n  const height = this.state.height; const width = this.state.width;\n  let meetpoint1; let meetpoint2; // the breakpoint from either direction\n  this.setState({pointer: start[0], pointer2: end[0], bi: true});\n  const visited1 = Array(height).fill().map(() =>\n    Array(width).fill(0));\n  // visited array to aid finding and stopping at common points\n  const visited2 = Array(height).fill().map(() =>\n    Array(width).fill(0));\n  const forwardPQ = new PriorityQueue((a, b) => a[1] < b[1]);\n  // forward PQ for points from Start end\n  const backwardPQ = new PriorityQueue((a, b) => a[1] < b[1]);\n  // Priority queue for points from the other end\n  forwardPQ.push([start, 0]);\n  backwardPQ.push([end, 0]);\n  // Parent arrays to restore the path\n  const par1 = Array(height).fill().map(() => Array(width).fill([]));\n  const par2 = Array(height).fill().map(() => Array(width).fill([]));\n  par1[start[0]][start[1]] = start;\n  par2[end[0]][end[1]] = end;\n  let reached = true;\n  let ok = 0;\n  // initialising the distance array to a Maxima\n  const dist1 = Array(height).fill().map(() =>\n    Array(width).fill(100000));\n  const dist2 = Array(height).fill().map(() =>\n    Array(width).fill(100000));\n  dist1[start[0]][start[1]] = 0;\n  dist2[end[0]][end[1]] = 0;\n  while (!forwardPQ.isEmpty() && !backwardPQ.isEmpty()) {\n    const grid = this.state.grid;\n    const current1 = forwardPQ.peek()[0];\n    const current2 = backwardPQ.peek()[0];\n    this.setState({pointer: current1, pointer2: current2});\n    await new Promise((done) =>\n      setTimeout(() => done(), this.state.speed));\n    visited1[current1[0]][current1[1]] = 1; // marking current pointers visited\n    visited2[current2[0]][current2[1]] = 1;\n    forwardPQ.pop(); backwardPQ.pop();\n    const neighbor1 = biNeighbors(current1[0], current1[1], this.state.grid);\n    const neighbor2 = biNeighbors(current2[0], current2[1], this.state.grid);\n    for (const item of neighbor1) {\n      // iterating over the neighbours from front\n      if (item[0] === start[0] && item[1] === start[1]) {\n        continue;\n      }\n      if (visited2[item[0]][item[1]] === 1) {\n        meetpoint2 = item; meetpoint1 = current1;\n        ok = 1;\n        break;\n      }\n      if ( dist1[current1[0]][current1[1]] + 1< dist1[item[0]][item[1]]) {\n        dist1[item[0]][item[1]] = dist1[current1[0]][current1[1]] + 1;\n        par1[item[0]][item[1]] = current1;\n        forwardPQ.push([item,\n          dist1[item[0]][item[1]]]);\n      }\n    }\n    if (ok === 1) {\n      break;\n    }\n    // iterating over neighbours from back\n    for (const item of neighbor2) {\n      if (item[0] === end[0] && item[1] === end[1]) {\n        continue;\n      }\n      if (visited1[item[0]][item[1]] === 1) {\n        meetpoint2 = current2;\n        meetpoint1 = item;\n        ok = 1;\n        break;\n      }\n      if ( dist2[current2[0]][current2[1]] + 1< dist2[item[0]][item[1]]) {\n        dist2[item[0]][item[1]] = dist2[current2[0]][current2[1]] + 1;\n        par2[item[0]][item[1]] = current2;\n        backwardPQ.push([item,\n          dist2[item[0]][item[1]]] );\n      }\n    }\n    grid[current1[0]][current1[1]] = 2;\n    grid[current2[0]][current2[1]] = 6;\n    grid[start[0]][start[1]]=3;\n    grid[end[0]][end[1]]=4;\n    this.setState({grid});\n    if (ok === 1) {\n      break;\n    }\n  }\n  // Retrieving the found path\n  let ptr = meetpoint1;\n  let ok1 = true;\n  while (ok1) {\n    this.state.path = [...this.state.path, ptr];\n    if (ptr === undefined) {\n      reached = false;\n      ok1 = false;\n    } else if (ptr[0] === start[0] && ptr[1] === start[1]) {\n      ok1 = false;\n    } else {\n      ptr = par1[ptr[0]][ptr[1]];\n    }\n  }\n  if (!reached) {\n    this.showModal(); // return not found\n    this.setState({visual: false});\n    return;\n  }\n  this.state.path = this.state.path.reverse();\n  ptr = meetpoint2;\n  let pth2= [];\n  ok = true;\n  while (ok) {\n    pth2 = [...pth2, ptr];\n    if (ptr === undefined) {\n      reached = false;\n      ok = false;\n    } else if (ptr[0] === end[0] && ptr[1] === end[1]) {\n      ok = false;\n    } else {\n      ptr = par2[ptr[0]][ptr[1]];\n    }\n  }\n  if (!reached) {\n    this.showModal(); // return not found\n    this.setState({visual: false});\n    return;\n  }\n  pth2 = pth2.reverse();\n  this.state.path = this.state.path.concat(pth2);\n  await this.pathdisplay(this.state.path);\n};\n","import PropTypes from \"prop-types\";\n/**\n *\n */\nclass Graph {\n  /**\n   *\n   * @param {array} grid\n   * @param {number} height\n   * @param {number} width\n   */\n  constructor(grid, height, width) {\n    this.adjacencyList = {};\n    this.allPairShortest = Array(height*width).\n        fill().map(() =>\n          Array(height*width).fill(1000000));\n    this.grid = grid;\n    this.map1 = new Map(); this.map2 = new Map();\n    this.height = height; this.width = width;\n    let counter = 0;\n    for (let i = 0; i < this.height; i++) {\n      for (let j = 0; j < this.width; j++) {\n        this.map1[parseInt(counter, 10)] = [[i, j]];\n        this.map2[[i, j]] = counter;\n        counter++;\n      }\n    }\n\n    this.constructGraph();\n    this.floydWarshall();\n  }\n  /**\n   *\n   * @param {number} vertex\n   */\n  addVertex(vertex) {\n    if (!this.adjacencyList[parseInt(vertex, 10)]) {\n      this.adjacencyList[parseInt(vertex, 10)] = [];\n    }\n  }\n  /**\n   *\n   * @param {number} source\n   * @param {number} destination\n   */\n  addEdge(source, destination) {\n    if (!this.adjacencyList[parseInt(source, 10)]) {\n      this.addVertex(parseInt(source, 10));\n    }\n    if (!this.adjacencyList[parseInt(destination, 10)]) {\n      this.addVertex(parseInt(destination, 10));\n    }\n    this.adjacencyList[parseInt(source, 10)].push(parseInt(destination, 10));\n    this.adjacencyList[parseInt(destination, 10)].push(parseInt(source, 10));\n  }\n  /**\n   *\n   * @param {number} i\n   * @param {number} j\n   * @return {boolean}\n   */\n  isNotWall(i, j) {\n    if (i < 0 || i >= this.height || j < 0 || j >= this.width ) {\n      return false;\n    } else {\n      return this.grid[parseInt(i, 10)][parseInt(j, 10)] !== 1;\n    }\n  }\n  /**\n   *\n   */\n  constructGraph() {\n    const directions = [[0, 1], [1, 0], [0, -1], [-1, 0]];\n    for (let i = 0; i < this.height; i++) {\n      for (let j = 0; j < this.width; j++) {\n        if (this.isNotWall(i, j)) {\n          for (const direction of directions) {\n            const neighbor = [i + direction[0], j + direction[1]];\n            if (this.isNotWall(neighbor[0], neighbor[1])) {\n              const x = this.map2[[i, j]];\n              const y = this.map2[[neighbor[0], neighbor[1]]];\n              this.addEdge(x, y);\n              this.allPairShortest[parseInt(x, 10)][parseInt(y, 10)] = 1;\n              this.allPairShortest[parseInt(y, 10)][parseInt(x, 10)] = 1;\n            }\n          }\n        }\n      }\n    }\n  }\n  /**\n   *Floyd Warshal Algo to store distances betwenn all pairs of vertices\n   */\n  floydWarshall() {\n    for (let k = 0; k < this.height*this.width; k++) {\n      for (let i = 0; i < this.height*this.width; i++) {\n        for (let j = 0; j < this.height*this.width; j++) {\n          this.allPairShortest[parseInt(i, 10)][parseInt(j, 10)] =\n              Math.min(this.allPairShortest[parseInt(i, 10)][parseInt(j, 10)],\n                  this.allPairShortest[parseInt(i, 10)][parseInt(k, 10)] +\n                  this.allPairShortest[parseInt(k, 10)][parseInt(j, 10)]);\n          this.allPairShortest[parseInt(j, 10)][parseInt(i, 10)] =\n              this.allPairShortest[parseInt(i, 10)][parseInt(j, 10)];\n        }\n      }\n    }\n  }\n}\nGraph.propTypes = {\n  grid: PropTypes.array,\n};\nexport default Graph;\n\n","import React, {Component} from \"react\";\r\nimport Grid from \"./components/Grid\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {DFS} from \"./Algo/dfs\";\r\nimport {Dijkstra} from \"./Algo/Dijkstra\";\r\nimport {AStar} from \"./Algo/AStar\";\r\nimport {findOptimalVertex} from \"./Algo/TSP\";\r\nimport {aStarForTSP} from \"./Algo/TSP\";\r\nimport {TSP} from \"./Algo/TSP\";\r\nimport {BFS} from \"./Algo/BFS\";\r\nimport {BiBFS} from \"./Algo/BiBFS\";\r\nimport {BiAstar} from \"./Algo/BiAstar\";\r\nimport {BidirectionalDijkstra} from \"./Algo/BidirectionalDijkstra\";\r\nimport Graph from \"./Algo/Graph\";\r\n\r\n//instructs user to select an algorithm first\r\nconst Instruct = () => {\r\n  return (\r\n      <div\r\n          style={{ position: \"fixed\", top: \"200px\", color: \"white\", left: \"44vw\" ,opacity:\"80%\"}}\r\n          className=\"p-4 bg-dark rounded shadow-lg animation-target\"\r\n      >\r\n        Please select an Algorithm first & then Visualize!\r\n      </div>\r\n  );\r\n};\r\n\r\n// This is the modal to display path not found\r\nconst D = ({handleClose, show}) => {\r\n  return (\r\n      <>\r\n        <Modal\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n            style={{\r\n              opacity: \"90%\",\r\n              backgroundColor: \"#000000\",\r\n              color: \"#fee440\",\r\n            }}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Uh-Oh!!</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            PATH TO THE TARGET NOT FOUND!\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n  );\r\n};\r\n//This is the path length modal, shown after the process\r\nconst PathModal = ({handleClose, show, pathlength}) => {\r\n  return (\r\n      <>\r\n        <Modal\r\n            show={show}\r\n            onHide={handleClose}\r\n            style={{\r\n              marginLeft:'0',\r\n              opacity:'70%',\r\n\r\n            }}\r\n        >\r\n          <Modal.Header closeButton>\r\n            Path length:  {pathlength}\r\n          </Modal.Header>\r\n        </Modal>\r\n      </>\r\n  );\r\n};\r\n/**\r\n * Class for our Application\r\n */\r\nclass App extends Component {\r\n  /**\r\n   *\r\n   * @param {props} props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      height: 17, // height of the grid\r\n      width: 30, // width of the grid\r\n      start: [[10, 9]], // start position\r\n      end: [[10, 15]], // end position\r\n      grid: Array(20).fill().map(() => Array(20).fill(0)),\r\n      speed: 0.100, // speed for animation\r\n      pointer: [], // store the pointer for visualization\r\n      pointer2: [], // for bidirectional visualization\r\n      modalshow: false,\r\n      heuristics: Array(20).fill().map(() => Array(20).fill(0)),\r\n      reverseHeuristics: Array(20).fill().map(() => Array(20).fill(0)),\r\n      path: [],\r\n      graph: null,\r\n      changeSource: false,\r\n      changeDestination: false,\r\n      multipledestinations: false,\r\n      showInstruct:false,\r\n      visual: false,\r\n      pathmodal:false,\r\n      pathlength: 0,\r\n      currentAlgo: \"Not Selected\",\r\n      bi: false, // boolean indicator for bidirectional algos\r\n    };\r\n    this.state.grid[this.state.start[0][0]][this.state.start[0][1]] = 3;\r\n    // special point : start point\r\n\r\n    this.state.grid[this.state.end[0][0]][this.state.end[0][1]] = 4;\r\n    // special point : end point\r\n\r\n    this.computeHeuristics();\r\n  }\r\n  dfs = DFS.bind(this);\r\n  bfs= BFS.bind(this);\r\n  dijkstra = Dijkstra.bind(this);\r\n  aStar = AStar.bind(this);\r\n  tsp = TSP.bind(this);\r\n  aStarForTSP = aStarForTSP.bind(this);\r\n  findOptimalVertex = findOptimalVertex.bind(this);\r\n  biBFS = BiBFS.bind(this);\r\n  biAstar = BiAstar.bind(this);\r\n  bidirectionalDijkstra = BidirectionalDijkstra.bind(this);\r\n\r\n  toggleSource=() => this.setState({changeSource: !this.state.changeSource});\r\n  toggleDestination = () => {\r\n    this.setState({changeDestination: !this.state.changeDestination});\r\n  }\r\n  changedSource=(i, j) => {\r\n    const grid = this.state.grid;\r\n    grid[this.state.start[0][0]][this.state.start[0][1]] = 0;\r\n    grid[parseInt(i, 10)][parseInt(j, 10)] = 3; // special point : end point\r\n    this.setState({\r\n      changeSource: !this.state.changeSource,\r\n      start: [[i, j]],\r\n      grid,\r\n    });\r\n  }\r\n  changedDestination = (i, j) => {\r\n    console.log(this.state.multipledestinations,this.state.changeDestination);\r\n    const grid = this.state.grid;\r\n\r\n    if (this.state.multipledestinations && this.state.changeDestination) {\r\n      grid[parseInt(i, 10)][parseInt(j, 10)] = 4; // special point : end point\r\n      this.setState({end: [...this.state.end, [i, j]], changeDestination: false, grid});\r\n      return;\r\n    } else if(this.state.changeDestination) {\r\n      grid[this.state.end[0][0]][this.state.end[0][1]] = 0;\r\n      grid[parseInt(i, 10)][parseInt(j, 10)] = 4; // special point : end point\r\n    }\r\n\r\n    this.setState({\r\n      changeDestination: !this.state.changeDestination,\r\n      end: [[i, j]],\r\n      grid,\r\n    });\r\n  }\r\n  multiDestination = () => {\r\n    this.setState({multipledestinations: !this.state.multipledestinations});\r\n  }\r\n  showModal = () => this.setState({modalshow: true});\r\n  hideModal = () => this.setState({modalshow: false});\r\n  hidePathModal = () => this.setState({pathmodal: false});\r\n  computeHeuristics= () => {\r\n    const heuristics = this.state.heuristics;\r\n    const start = this.state.start; const end = this.state.end;\r\n    const height = this.state.height; const width = this.state.width;\r\n    for (let i = 0; i < height; i++) {\r\n      for (let j = 0; j < width; j++) {\r\n        heuristics[parseInt(i, 10)][parseInt(j, 10)] =\r\n            Math.abs(end[0][0]-i) + Math.abs(end[0][1]-j);\r\n      }\r\n    }\r\n\r\n    const reverseHeuristics = this.state.reverseHeuristics;\r\n    for (let i = 0; i < height; i++) {\r\n      for (let j = 0; j < width; j++) {\r\n        reverseHeuristics[parseInt(i, 10)][parseInt(j, 10)] =\r\n            Math.abs(start[0][0]-i) + Math.abs(start[0][1]-j);\r\n      }\r\n    }\r\n\r\n    this.setState({heuristics, reverseHeuristics});\r\n  }\r\n  randomizeMatrix = () => {\r\n    this.clearGrid();\r\n    const newGrid = Array(this.state.height).fill().map(() =>\r\n        Array(this.state.width).fill(0));\r\n    for (let i = 0; i < this.state.height; i++) {\r\n      for (let j = 0; j < this.state.width; j++) {\r\n        newGrid[parseInt(i, 10)][parseInt(j, 10)] =\r\n            (Math.floor(Math.random() * 10) % 2);\r\n        // random values of zero or one to generate a random grid of\r\n        // walls amd empty cells\r\n      }\r\n    }\r\n    newGrid[this.state.start[0][0]][this.state.start[0][1]] = 3;\r\n    // special point : start\r\n    newGrid[this.state.end[0][0]][this.state.end[0][1]] = 4;\r\n    // special point : end\r\n    this.setState({grid: newGrid});\r\n  }\r\n  clearGrid = () => {\r\n    const newGrid = Array(this.state.height).fill().map(() =>\r\n        Array(this.state.width).fill(0));\r\n    newGrid[this.state.start[0][0]][this.state.start[0][1]] = 3;\r\n    // special point : start\r\n    newGrid[this.state.end[0][0]][this.state.end[0][1]] = 4;\r\n    // special point : end\r\n    this.setState({grid: newGrid, pointer: [], pointer2: []});\r\n  }\r\n  changeState = (x, y) => {\r\n    if (this.state.grid[parseInt(x, 10)][parseInt(y, 10)] === 3) {\r\n      return;\r\n    } // check if the current point is a special point (start or end)\r\n    const grid = this.state.grid;\r\n    if (grid[parseInt(x, 10)][parseInt(y, 10)] === 0 ||\r\n        grid[parseInt(x, 10)][parseInt(y, 10)] === 2) {\r\n      // if it is a visited cell or empty , make it a wall\r\n      grid[parseInt(x, 10)][parseInt(y, 10)] = 1;\r\n    } else { // convert a wall to empty cell\r\n      grid[parseInt(x, 10)][parseInt(y, 10)] = 0;\r\n    }\r\n    grid[this.state.start[0][0]][this.state.start[0][1]] = 3;\r\n    grid[this.state.end[0][0]][this.state.end[0][1]] = 4;\r\n    this.setState({grid});\r\n  }\r\n  changeSpeed = (newSpeed) => this.setState({speed: newSpeed});\r\n  selectAlgo = (name) => this.setState({currentAlgo: name});\r\n  visualize = async () => {\r\n    if (this.state.currentAlgo === \"Not Selected\") {\r\n      this.setState({ showInstruct: true });\r\n      setTimeout(() => this.setState({ showInstruct: false }), 3000);\r\n      return;\r\n    }\r\n    const pointer = this.state.pointer;\r\n    pointer[0] = this.state.start[0][0];\r\n    pointer[1] = this.state.start[0][1];\r\n    this.setState({pointer, visual: true});\r\n\r\n    if (this.state.start[0] === this.state.end[0][0] &&\r\n        this.state.start[1] === this.state.end[0][1]) {\r\n      return;\r\n    }\r\n\r\n    if (this.state.start[0][0] === this.state.end[0][0] &&\r\n        this.state.start[0][1] === this.state.end[0][1]) {\r\n      return;\r\n    } else if (this.state.currentAlgo === \"DFS\") {\r\n      await this.dfs();\r\n    } else if (this.state.currentAlgo === \"Dijkstra\") {\r\n      await this.dijkstra();\r\n    } else if (this.state.currentAlgo === \"BFS\") {\r\n      await this.bfs();\r\n    } else if (this.state.currentAlgo === \"biDijkstra\") {\r\n      await this.bidirectionalDijkstra();\r\n    } else if (this.state.currentAlgo === \"Best-FS\") {\r\n      await this.aStar(0, 1);\r\n    } else if (this.state.currentAlgo === \"A*\") {\r\n      await this.aStar(1, 1);\r\n    } else if (this.state.currentAlgo === \"Weighted-AStar\") {\r\n      await this.aStar(1, 10);\r\n    } else if (this.state.currentAlgo === \"TSP\") {\r\n      this.state.graph =\r\n          new Graph(this.state.grid, this.state.height, this.state.width);\r\n      await this.tsp();\r\n    } else if (this.state.currentAlgo === \"biBFS\") {\r\n      await this.biBFS();\r\n    } else if (this.state.currentAlgo === \"BiAstar\") {\r\n      await this.biAstar();\r\n    }\r\n  }\r\n  pathdisplay = async (path) => {\r\n    const grid = this.state.grid;\r\n    console.log(this.state.path);\r\n    for (let i = 1; i < path.length; i++) {\r\n      grid[path[parseInt(i, 10)][0]][path[parseInt(i, 10)][1]] = 5;\r\n      await new Promise((done) => setTimeout(() => done(), this.state.speed));\r\n      this.setState({grid});\r\n    }\r\n\r\n    grid[this.state.end[0][0]][this.state.end[0][1]] = 4;\r\n    grid[this.state.start[0][0]][this.state.start[0][1]] = 3;\r\n\r\n    await new Promise((done) => setTimeout(() => done(), this.state.speed));\r\n    this.setState({grid, visual: false,\r\n      pathlength: path.length,\r\n      pathmodal:true,\r\n      bi: false, pointer: [], pointer2: []});\r\n  }\r\n  clearPath = () => {\r\n    const g = this.state.grid;\r\n    for (let i = 0; i < this.state.height; i++) {\r\n      for (let j = 0; j < this.state.width; j++) {\r\n        if (g[parseInt(i, 10)][parseInt(j, 10)] === 5) {\r\n          g[parseInt(i, 10)][parseInt(j, 10)] = 2;\r\n        }\r\n      }\r\n    }\r\n    this.setState({path: [], grid: g});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <div id=\"navigation\">\r\n            <Navbar randomize={this.randomizeMatrix}\r\n                    clearWalls={this.clearGrid}\r\n                    newSpeed={this.changeSpeed}\r\n                    multiDestination={this.multiDestination}\r\n                    handle={this.selectAlgo}\r\n                    selectedAlgo={this.currentAlgo}\r\n                    visualize={this.visualize}\r\n                    clearPath = {this.clearPath}\r\n                    multipledestinations = {this.state.multipledestinations}\r\n                    visual={this.state.visual}\r\n                    toggleSource= {this.toggleSource}\r\n                    toggleDestination=\r\n                        {this.toggleDestination}/>\r\n          </div>\r\n          <div id=\"Board\">\r\n            <Grid start={this.state.start} end={this.state.end}\r\n                  height={this.state.height}\r\n                  multipledestinations = {this.state.multipledestinations}\r\n                  bi={this.state.bi}\r\n                  width={this.state.width}\r\n                  grid={this.state.grid}\r\n                  changeState={this.changeState}\r\n                  changesourcefunc={this.changedSource}\r\n                  changedestfunc = {this.changedDestination}\r\n                  pointer={this.state.pointer}\r\n                  pointer2={this.state.pointer2}\r\n                  changeSource = {this.state.changeSource}\r\n                  changeDestination = {this.state.changeDestination} />\r\n          </div>\r\n          <D show={this.state.modalshow} handleClose={this.hideModal} />\r\n          <PathModal show={this.state.pathmodal} handleClose={this.hidePathModal} pathlength={this.state.pathlength} />\r\n          {this.state.showInstruct ? <Instruct /> : null}\r\n\r\n\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React, {Component} from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport BackgroundSlider from \"react-background-slider\";\r\nimport mars1 from \"../media/mars1.jpg\";\r\nimport mars3 from \"../media/mars3.jpg\";\r\nimport mars4 from \"../media/mars4.png\";\r\nimport mars5 from \"../media/mars5.jpg\";\r\nimport mars6 from \"../media/mars6.jpg\";\r\nimport mars7 from \"../media/mars7.jpg\";\r\nimport mars8 from \"../media/mars8.jpg\";\r\nimport mars9 from \"../media/mars9.jpg\";\r\n\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Background from \"./LANDING.png\";\r\n\r\n/**\r\n * Front Landing Page\r\n */\r\nclass Welcome extends React.Component {\r\n  /**\r\n   *\r\n   * @param {props} props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isChecked1: false,\r\n      isChecked2: false,\r\n      userAnswer: null,\r\n    };\r\n  }\r\n  toggleChange = (option) => {\r\n    if (option === 1) {\r\n      this.setState({isChecked1: true, isChecked2: false, userAnswer: \"True\"});\r\n    } else {\r\n      this.setState({isChecked1: false, isChecked2: true, userAnswer: \"False\"});\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Modal\r\n          show={this.props.show}\r\n          onHide={this.props.handleClose}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n          style={{\r\n            backgroundColor: \"#3423ae 80%\",\r\n          }}\r\n\r\n        >\r\n          <Modal.Header closeButton style={{\r\n            backgroundColor: \"#89daff\",\r\n            opacity: \"100%\",\r\n          }}>\r\n            <Modal.Title>Get Aboard!</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{\r\n            backgroundColor: \"#89daff\",\r\n            opacity: \"100%\",\r\n          }}>\r\n            <div><i>Answer this to move ahead!</i></div>\r\n            <div>{this.props.question}</div>\r\n            <div>\r\n              <label>\r\n                <input type=\"checkbox\"\r\n                  checked={this.state.isChecked1}\r\n                  onChange={() => this.toggleChange(1)}\r\n                />\r\n                  True\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <input type=\"checkbox\"\r\n                  checked={this.state.isChecked2}\r\n                  onChange={() => this.toggleChange(2)}\r\n                />\r\n                  False\r\n              </label>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer\r\n            style={{\r\n              backgroundColor: \"#89daff\",\r\n              opacity: \"100%\",\r\n            }}>\r\n            <Button variant=\"danger\" onClick={this.props.handleClose} style={{\r\n              backgroundColor: \"#ff0000\",\r\n            }}>\r\n                Try Later\r\n            </Button>\r\n            <Button variant=\"primary\" style={{\r\n              backgroundColor: \"#00ff00\",\r\n            }}\r\n            onClick={() => this.props.onSubmit(this.state.userAnswer)}>\r\n                LETS GO!\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Parse the question using get request\r\n * @param {string} theUrl\r\n * @return {string}\r\n */\r\nfunction httpGet(theUrl) {\r\n  const xmlHttp = new XMLHttpRequest();\r\n  xmlHttp.open( \"GET\", theUrl, false ); // false for synchronous request\r\n  xmlHttp.send( null );\r\n  return xmlHttp.responseText;\r\n}\r\n\r\n/**\r\n * Stores properties related to user question and page redirection\r\n */\r\nclass Home extends Component {\r\n  state = {\r\n    show: false,\r\n    redirect: null,\r\n    question: null,\r\n    answer: null,\r\n  };\r\n\r\n  /**\r\n   * Get questions from API before page loads\r\n   * @return {Promise<void>}\r\n   */\r\n  async componentDidMount() {\r\n    try {\r\n      let res = httpGet(\"https://opentdb.com/api.php?amount=1&category=18&type=boolean\");\r\n      res = JSON.parse(res);\r\n      res = res[\"results\"][0];\r\n      res[\"question\"] = res[\"question\"].replace(/&quot;/gi, \"\\\"\");\r\n      res[\"question\"] = res[\"question\"].replace(/&#039;/gi, \"/'\");\r\n      this.setState({question: res[\"question\"], answer: res[\"correct_answer\"]});\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Changes state when user clicks submit\r\n   * @param {anyObject }option\r\n   */\r\n  onSubmit(option) {\r\n    if (option === this.state.answer) {\r\n      this.setState({redirect: \"/mars-colonization-project/App\"});\r\n    } else {\r\n      alert(\"Wrong Option Chosen\");\r\n    }\r\n  }\r\n  handleShow = () => {\r\n    this.setState({show: true});\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({show: false});\r\n  };\r\n\r\n  /**\r\n   * renders the home screen\r\n   * @return {*}\r\n   */\r\n  render() {\r\n    if (this.state.redirect !== null) {\r\n      return <Redirect to='/mars-colonization-project/App'/>;\r\n    }\r\n    return (\r\n\r\n      <div id = \"home\"\r\n        style={{background:\r\n                 \"url(\" + {Background} + \")\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundPosition: \"center\",\r\n        backgroundSize: \"cover\",\r\n        backgroundRepeat: \"no-repeat\"}}>\r\n        <div id=\"MissionTitle\"\r\n          className=\"mb-4 p-4\"\r\n          style={{backgroundColor: \"#e5e5e5\",\r\n            opacity: \"70%\",\r\n            borderRadius: \"25%\",\r\n            float: \"right\",\r\n            width: \"25%\",\r\n            height: \"25%\",\r\n            fontSize: \"2em\",\r\n            textAlign:\"center\",\r\n            marginTop: \"35px\"}}>\r\n          <p><b>&nbsp;&nbsp;MISSION</b></p>\r\n          <p><b> COLONIZE MARS! </b></p>\r\n        </div>\r\n\r\n\r\n        <Button variant=\"primary\" size=\"lg\" onClick={this.handleShow} style={{\r\n          backgroundColor: \"#283618\",\r\n          color: \"#fefae0\",\r\n          position:\"relative center\",\r\n          marginTop:\"20%\",\r\n          marginLeft:\"43%\",\r\n          scrollMarginTop:\"20%\",\r\n          scrollMarginLeft:\"43%\",\r\n        }}>\r\n          <strong>LAUNCH TO MARS</strong>\r\n        </Button>\r\n        <Welcome question = {this.state.question}\r\n          answer = {this.state.answer}\r\n          handleClose={this.handleClose}\r\n          show={this.state.show}\r\n          handleShow={this.handleShow}\r\n          onSubmit={this.onSubmit.bind(this)}/>\r\n        <BackgroundSlider\r\n          images={[mars7, mars1, mars5, mars7,\r\n            mars3, mars8, mars4, mars6, mars9]}\r\n          duration={3}\r\n          transition={0}/>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport App from \"./App\";\nimport Home from \"./components/Home\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\n/**\n *\n * @return {*}\n * @constructor\n */\nexport default function Root() {\n  return (\n    <Router >\n      <Switch>\n        <Route exact path=\"/mars-colonization-project\">\n          <Home />\n        </Route>\n        <Route path=\"/mars-colonization-project/App\">\n          <App />\n        </Route>\n        <Route path=\"*\">\n          <App />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === \"installed\") {\n              if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n                console.log(\n                    \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n                console.log(\"Content is cached for offline use.\");\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error(\"Error during service worker registration:\", error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {\"Service-Worker\": \"script\"},\n  })\n      .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get(\"content-type\");\n        if (\n          response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n        ) {\n        // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n        // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            \"No internet connection found. App is running in offline mode.\",\n        );\n      });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Root from \"./Root\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n      <Root />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}