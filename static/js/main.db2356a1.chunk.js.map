{"version":3,"sources":["media/mars7.jpg","media/mars-rover.svg","media/mars1.jpg","media/mars2.jpg","media/mars3.jpg","media/mars4.png","media/mars5.jpg","media/mars6.jpg","media/mars8.jpg","media/mars9.jpg","components/LANDING.png","components/Cell.js","components/Grid.js","components/Navbar.js","Algo/dfs.js","Algo/customPriorityQueue.js","Algo/Dijkstra.js","Algo/Utility.js","Algo/AStar.js","Algo/TSP.js","Algo/BFS.js","Algo/BiBFS.js","Algo/BiAstar.js","Algo/BidirectionalDijkstra.js","Algo/Graph.js","App.js","components/Home.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","currentPointer","props","i","j","key","style","width","height","border","backgroundColor","WebkitUserSelect","onClick","changeSource","toggleSource","changeState","src","rover","alt","finalShortestPath","changesourcefunc","changeDestination","changedestfunc","startPoint","endPoint","wall","onTouchStart","e","window","event","buttons","onMouseEnter","visited","visited2","empty","multipledestinations","Grid","gridList","rowList","bi","pointer","pointer2","push","grid","parseInt","className","map","object","index","Navbar","state","selectedAlgo","currentAlgo","checkedA","this","document","getElementById","innerHTML","multiDestination","editButtons","setState","algo","target","getAttribute","toString","setString","handle","id","href","FormGroup","FormControlLabel","control","Switch","color","checked","onChange","hc","label","disabled","visual","toggleDestination","type","fontWeight","visualize","data-toggle","onMouseDown","handleChange","randomize","clearWalls","clearPath","newSpeed","React","Component","DFS","a","flag","start","end","speed","Array","fill","stack","ok","path","length","current","pop","Promise","done","setTimeout","list","concat","showModal","pathdisplay","parent","left","right","PriorityQueue","comparator","b","_heap","_comparator","size","values","forEach","value","_siftUp","poppedValue","peek","bottom","_swap","_siftDown","replacedValue","node","_greater","maxChild","Dijkstra","queue","dist","par","ptr","reverse","directions","isFeasable","isFeasable2","neighbors","answer","direction","neighbor","biNeighbors","AStar","w1","w2","computeHeuristics","pq","heuristics","dp","isEmpty","item","TSP","unvisited","Set","add","now","totalpath","pathfound","togo","findOptimalVertex","delete","sourceMapped","graph","map2","destinationMapped","allPairShortest","aStarForTSP","newpath","AppState","Math","abs","source","BFS","shift","BiBFS","queue1","queue2","reached","isGoodCell","par1","par2","revcurrent","flag1","flag2","list1","list2","dir","neighbour1","neighbour2","breakpoint","ok1","undefined","pth2","BiAstar","reverseheuristics","reverseHeuristics","visited1","forwardPQ","backwardPQ","dist1","dist2","current1","current2","neighbor1","neighbor2","meetpoint2","meetpoint1","BidirectionalDijkstra","Graph","adjacencyList","map1","Map","counter","constructGraph","floydWarshall","vertex","destination","addVertex","isNotWall","x","y","addEdge","k","min","propTypes","PropTypes","array","D","handleClose","show","Modal","onHide","backdrop","keyboard","opacity","Header","closeButton","Title","Body","Footer","Button","variant","App","dfs","bind","bfs","dijkstra","aStar","tsp","biBFS","biAstar","bidirectionalDijkstra","changedSource","changedDestination","modalshow","hideModal","randomizeMatrix","clearGrid","newGrid","floor","random","changeSpeed","selectAlgo","name","g","Welcome","toggleChange","option","isChecked1","isChecked2","userAnswer","question","onSubmit","httpGet","theUrl","xmlHttp","XMLHttpRequest","open","send","responseText","Home","redirect","handleShow","res","JSON","parse","replace","console","log","alert","to","background","Background","backgroundPosition","backgroundSize","backgroundRepeat","borderRadius","float","fontSize","marginTop","position","margin","marginLeft","images","mars7","mars1","mars2","mars5","mars3","mars4","mars8","mars9","mars6","duration","transition","Root","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.db2356a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mars7.f9354f0a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars-rover.59452d47.svg\";","module.exports = __webpack_public_path__ + \"static/media/mars1.7a8733c3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars2.7bf85db4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars3.6a21f55b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars4.17d38c2f.png\";","module.exports = __webpack_public_path__ + \"static/media/mars5.548733ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars6.97edad93.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars8.474640cc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mars9.4aee5d3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/LANDING.ee7b2b54.png\";","import rover from \"../media/mars-rover.svg\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nexport const currentPointer = function(props, i, j) {\n  return (<div\n    key={i + j}\n    style={{width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\n      backgroundColor: \"#69fff1\", WebkitUserSelect: \"none\",\n    }}\n    onClick={() => {\n      if (props.changeSource) {\n        props.toggleSource(i, j);\n      } else {\n        props.changeState(i, j);\n      }\n    }}\n  >\n    <img src={rover} alt='start' style={{width: \"25px\", height: \"25px\"}}/>\n  </div>);\n};\n\nexport const finalShortestPath = function(props, i, j) {\n  return ( <div\n    key={i + j}\n    style={{width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\n      backgroundColor: \"#fee440\", WebkitUserSelect: \"none\",\n    }}\n    onClick={() => {\n      if (props.changeSource) {\n        props.changesourcefunc(i, j);\n      } else if (props.changeDestination) {\n        props.changedestfunc(i, j);\n      } else {\n        props.changeState(i, j);\n      }\n    }}\n  >\n  </div>);\n};\nexport const startPoint = function(props, i, j) {\n  return (\n    <div\n      key={i + j}\n      style={{width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\n        backgroundColor: \"#71b340\", WebkitUserSelect: \"none\",\n      }}\n      onClick={() => {\n        if (props.changeSource) {\n          props.changesourcefunc(i, j);\n        } else if (props.changeDestination) {\n          props.changedestfunc(i, j);\n        } else {\n          props.changeState(i, j);\n        }\n      }\n      }\n    >\n    </div>);\n};\nexport const endPoint = function(props, i, j) {\n  return (\n    <div\n      key={i + j}\n      style={{\n        width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\n        backgroundColor: \"#ee0000\", WebkitUserSelect: \"none\",\n      }}\n      onClick={() => {\n        if (props.changeSource) {\n          props.changesourcefunc(i, j);\n        } else if (props.changeDestination) {\n          props.changedestfunc(i, j);\n        } else {\n          props.changeState(i, j);\n        }\n      }\n      }\n\n    >\n    </div>\n  );\n};\n\nexport const wall = function(props, i, j) {\n  return (\n    <div\n      key={i + j}\n      style={{\n        width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\n        backgroundColor: \"#540b0e\", WebkitUserSelect: \"none\",\n      }}\n      onClick={() => {\n        if (props.changeSource) {\n          props.changesourcefunc(i, j);\n        } else if (props.changeDestination) {\n          props.changedestfunc(i, j);\n        } else {\n          props.changeState(i, j);\n        }\n      }}\n      onTouchStart={(e) => {\n        if (window.event.buttons === 1) {\n          props.changeState(i, j);\n        }\n      }\n      }\n      onMouseEnter={(e) => {\n        if (window.event.buttons === 1) {\n          props.changeState(i, j);\n        }\n      }\n      }\n    >\n    </div>\n  );\n};\n\nexport const visited = function(props, i, j) {\n  return (\n    <div\n      key={i + j}\n      style={{\n        width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\n        backgroundColor: \"#e09891\", WebkitUserSelect: \"none\",\n      }}\n      onClick={() => {\n        if (props.changeSource) {\n          props.changesourcefunc(i, j);\n        } else if (props.changeDestination) {\n          props.changedestfunc(i, j);\n        } else {\n          props.changeState(i, j);\n        }\n      }}\n    >\n    </div>\n  );\n};\nexport const visited2 = function(props, i, j) {\n  return (\n    <div\n      key={i + j}\n      style={{\n        width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\n        backgroundColor: \"#666666\", WebkitUserSelect: \"none\",\n      }}\n      onClick={() => {\n        if (props.changeSource) {\n          props.changesourcefunc(i, j);\n        } else if (props.changeDestination) {\n          props.changedestfunc(i, j);\n        } else {\n          props.changeState(i, j);\n        }\n      }}\n    >\n    </div>\n  );\n};\nexport const empty = function(props, i, j) {\n  return ( <div\n    key={i + j}\n    style={{\n      width: \"35px\", height: \"35px\", border: \"1.5px solid black\",\n      WebkitUserSelect: \"none\",\n    }}\n    onClick={() => {\n      if (props.changeSource) {\n        props.changesourcefunc(i, j);\n      } else if ((props.changeDestination) || (props.multipledestinations)) {\n        props.changedestfunc(i, j);\n      } else {\n        props.changeState(i, j);\n      }\n    }}\n    onTouchStart={(e) => {\n      if (window.event.buttons === 1) {\n        props.changeState(i, j);\n      }\n    }\n    }\n    onMouseEnter={(e) => {\n      if (window.event.buttons === 1) {\n        props.changeState(i, j);\n      }\n    }\n    }\n  >\n  </div>);\n};\n\nempty.propTypes = {\n  changeSource: PropTypes.bool,\n  changeDestination: PropTypes.bool,\n  changesourcefunc: PropTypes.func,\n  changedestfunc: PropTypes.func,\n  changeState: PropTypes.func,\n  multipledestinations: PropTypes.bool,\n\n};\n\nvisited.propTypes = {\n  changeSource: PropTypes.bool,\n  changeDestination: PropTypes.bool,\n  changesourcefunc: PropTypes.func,\n  changedestfunc: PropTypes.func,\n  changeState: PropTypes.func,\n\n};\nvisited2.propTypes = {\n  changeSource: PropTypes.bool,\n  changeDestination: PropTypes.bool,\n  changesourcefunc: PropTypes.func,\n  changedestfunc: PropTypes.func,\n  changeState: PropTypes.func,\n\n};\n\nwall.propTypes ={\n  changeSource: PropTypes.bool,\n  changeDestination: PropTypes.bool,\n  changesourcefunc: PropTypes.func,\n  changedestfunc: PropTypes.func,\n  changeState: PropTypes.func,\n};\n\nfinalShortestPath.propTypes = {\n  changeSource: PropTypes.bool,\n  changeDestination: PropTypes.bool,\n  changesourcefunc: PropTypes.func,\n  changedestfunc: PropTypes.func,\n  changeState: PropTypes.func,\n};\n\n\nstartPoint.propTypes = {\n  changeSource: PropTypes.bool,\n  changeDestination: PropTypes.bool,\n  changesourcefunc: PropTypes.func,\n  changedestfunc: PropTypes.func,\n  changeState: PropTypes.func,\n};\n\nendPoint.propTypes = {\n  changeSource: PropTypes.bool,\n  changeDestination: PropTypes.bool,\n  changesourcefunc: PropTypes.func,\n  changedestfunc: PropTypes.func,\n  changeState: PropTypes.func,\n};\n\ncurrentPointer.propTypes = {\n  changeSource: PropTypes.bool,\n  toggleSource: PropTypes.func,\n  changeState: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {currentPointer, wall, finalShortestPath, startPoint,\n  endPoint, visited, visited2, empty} from \"./Cell\";\n\n/**\n *\n * @param {props} props\n * @return {*}\n * @constructor\n */\nfunction Grid(props) {\n  const height = props.height; const width = props.width;\n  const gridList = [];\n\n  /* status of grid states for reference\n      0: normal cell\n      1:wall\n      2:visited during search\n      3:Special Points : start\n      4:Special Points : end\n      5:Cells in Final Shortest Path\n      */\n\n  for (let i = 0; i < height; i++) {\n    const rowList = [];\n    for (let j = 0; j < width; j++) {\n      if (!props.bi && props.pointer &&\n          i === props.pointer[0] &&\n          j === props.pointer[1]) {\n        rowList.push(currentPointer(props, i, j));\n      } else if (!props.bi && props.pointer2 &&\n          i === props.pointer2[0] &&\n          j === props.pointer2[1]) {\n        rowList.push(currentPointer(props, i, j));\n      } else if (props.grid[parseInt(i, 10)][parseInt(j, 10)] === 1) {\n        rowList.push(wall(props, i, j));\n      } else if (props.grid[parseInt(i, 10)][parseInt(j, 10)] === 2) {\n        rowList.push(visited(props, i, j));\n      } else if (props.grid[parseInt(i, 10)][parseInt(j, 10)] === 3) {\n        rowList.push(startPoint(props, i, j));\n      } else if (props.grid[parseInt(i, 10)][parseInt(j, 10)] === 4) {\n        rowList.push(endPoint(i, j));\n      } else if (props.grid[parseInt(i, 10)][parseInt(j, 10)] === 5) {\n        rowList.push(finalShortestPath(props, i, j));\n      } else if (props.grid[parseInt(i, 10)][parseInt(j, 10)] === 6) {\n        rowList.push(visited2(props, i, j));\n      } else {\n        rowList.push(empty(props, i, j));\n      }\n    }\n    gridList.push(rowList);\n  }\n  return (\n    <div className=\"p-4\">\n      {gridList.map((object, index) => {\n        return (\n          <div className=\"row justify-content-center flex-nowrap\" key = {index}>\n            {object}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nGrid.propTypes = {\n  height: PropTypes.number,\n  width: PropTypes.number,\n  grid: PropTypes.array,\n  changeState: PropTypes.func,\n  start: PropTypes.array,\n  end: PropTypes.array,\n  changeSource: PropTypes.bool,\n  changeDestination: PropTypes.bool,\n  changesourcefunc: PropTypes.func,\n  changedestfunc: PropTypes.func,\n  bi: PropTypes.bool,\n  pointer: PropTypes.array,\n  pointer2: PropTypes.array,\n};\n\nexport default Grid;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n/**\n *\n * @param {props} props\n * @return {*}\n * @constructor\n */\nclass Navbar extends React.Component {\n  /**\n   *@param {props} props\n   */\n  constructor(props) {\n    super(props);\n    this.state={\n      selectedAlgo: props.currentAlgo,\n      checkedA: false,\n    };\n  }\n\n  /**\n   * changes state in app when user toggles the switch for multiple destination\n   */\n  hc() {\n    if (!this.state.checkedA) {\n      this.editButtons();\n    } else {\n      document.getElementById(\"chngDestBtn\").innerHTML =\n          \"<button class=\\\"btn\\\" \" +\n          \"type='button'  \" +\n          \"onClick={this.props.toggleDestination} \" +\n          \" style=\\\"background-color:#6a040f;\\\"  \" +\n          \"'color:peachpuff'>\"+\n          \"Change Destination\"+\n          \"</ button>\";\n      this.props.multiDestination();\n    }\n    this.setState({checkedA: !this.state.checkedA});\n  }\n\n  /**\n   * Changes the buttons when multiple destination toggle is changed\n   */\n  editButtons() {\n    document.getElementById(\"chngDestBtn\").innerHTML =\n        \"<button \" +\n        \"class=\\\"btn\\\" \" +\n        \"type='button' \"+\n        \" style='background-color:#6a040f;'\" +\n        \" color:peachpuff>\"+\n        \"Add Destination\"+\n        \"</button>\";\n    this.props.multiDestination();\n  }\n  /**\n   * Changes the Visualize Algo button according to the state\n   * @param {anything} event\n   */\n  handleChange(event) {\n    const algo = (event.target.getAttribute(\"id\")).toString();\n    const setString = \"Visualize  \" + algo + \"!\";\n    document.getElementById(\"visualizebtn\").innerHTML =\n        \"<button id='visualizebtn' \" +\n        \"class='btn' \" +\n        \"type='button' \" +\n        \"style='font-weight:bold'>\" +\n        setString +\n        \"</button>\";\n\n    this.props.handle(algo);\n    this.setState({selectedAlgo: algo});\n  }\n  /**\n   *\n   * @return {*}\n   */\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg\">\n          <div className=\"container-fluid\">\n            <div className=\"navbar-header\">\n              <a id=\"refreshButton\"\n                className=\"navbar-brand\"\n                href=\"/mars-colonization-project/App\">\n                {/* eslint-disable-next-line max-len */}\n                  Conquer Mars! <i className=\"fa fa-rocket\"/>\n                <span className=\"icon\" />\n              </a>\n            </div>\n            <ul className=\"navbar-nav\">\n              <FormGroup>\n                <FormControlLabel\n                  control={<Switch color = \"primary\"\n                    checked={this.state.checkedA}\n                    onChange={() => this.hc()} />\n                  }\n                  label=\"Multiple Destinations\"\n                  style={{color: \"peachpuff\"}}\n\n                />\n              </FormGroup>\n              <li className=\"nav-item\">\n                <button onClick={this.props.toggleSource}\n                  className=\"btn\"\n                  style={{\n                    backgroundColor: \"#71b340\",\n                  }}\n                  disabled={this.props.visual}\n                >\n                    Change Source\n                </button>\n              </li>\n              <li className=\"nav-item\"\n                id=\"chngDestBtn\">\n                <button onClick={this.props.toggleDestination}\n                  className=\"btn\"\n                  style={{\n                    backgroundColor: \"#6a040f\",\n                    color: \"peachpuff\",\n                  }}\n                  disabled={this.props.visual}\n                >\n                    Change Destination\n                </button>\n              </li>\n              <li className=\"nav-item\">\n\n                <button\n                  id=\"visualizebtn\"\n                  className=\"btn\"\n                  type=\"button\"\n                  style={{fontWeight: \"bolder\"}}\n                  onClick={this.props.visualize}\n                  disabled={this.props.visual}\n                >\n                    Visualize\n                </button>\n              </li>\n              <li className=\"nav-item dropdown\"\n                id = \"AlgosList\">\n                <button\n                  className=\"btn dropdown-toggle\"\n                  type=\"button\"\n                  data-toggle=\"dropdown\"\n                  disabled={this.props.visual}\n                >\n                    Algorithms <span className=\"caret\"/>\n                </button>\n                <ul className=\"dropdown-menu\">\n                  <li >\n                    <button id=\"Dijkstra\"\n                      disabled={this.props.multipledestinations}\n                      onMouseDown={(event) => this.handleChange(event)}>\n                        Dijkstra Algorithm</button>\n                  </li>\n                  <li >\n                    <button id=\"A*\"\n                      disabled={this.props.multipledestinations}\n                      onClick={(event) => this.handleChange(event)}>\n                        A* Search </button>\n                  </li>\n                  <li >\n                    <button id=\"DFS\"\n                      disabled={this.props.multipledestinations}\n                      onClick={(event) => this.handleChange(event)}>\n                        DFS </button>\n                  </li>\n                  <li >\n                    <button id=\"BFS\"\n                      disabled={this.props.multipledestinations}\n                      onMouseDown={(event) => this.handleChange(event)}>\n                        BFS</button>\n                  </li>\n                  <li >\n                    <button id=\"biDijkstra\"\n                      disabled={this.props.multipledestinations}\n                      onMouseDown={(event) => this.handleChange(event)}>\n                        Bidirectional Dijkstra</button>\n                  </li>\n                  <li >\n                    <button id='biBFS'\n                      disabled={this.props.multipledestinations}\n                      onMouseDown={(event) => this.handleChange(event)}>\n                        Bidirectional BFS </button>\n                  </li>\n                  <li>\n                    <button id='Best-FS'\n                      disabled={this.props.multipledestinations}\n                      onMouseDown={(event) => this.handleChange(event)}>\n                        Greedy best-first search\n                    </button>\n                  </li>\n                  <li >\n                    <button id='TSP'\n                      onMouseDown={(event) => this.handleChange(event)}>\n                        Travelling Salesman\n                    </button>\n                  </li>\n                  <li >\n                    <button id='Weighted-AStar'\n                      disabled={this.props.multipledestinations}\n                      onMouseDown={(event) => this.handleChange(event)}>\n                        Weighted A*\n                    </button>\n                  </li>\n                  <li >\n                    <button\n                      id='BiAstar'\n                      disabled={this.props.multipledestinations}\n                      onMouseDown={(event) => this.handleChange(event)}>\n                        Bidirectional A*\n                    </button>\n                  </li>\n                </ul>\n              </li>\n              <li className='nav-item'>\n                <button onClick={this.props.randomize}\n                  className='btn'\n                  disabled={this.props.visual}>\n                    Randomize\n                </button>\n              </li>\n              <li className='nav-item'>\n                <button onClick = {this.props.clearWalls}\n                  className='btn'\n                  disabled={this.props.visual}>\n                    Clear Board\n                </button>\n              </li>\n              <li className='nav-item'>\n                <button onClick = {this.props.clearPath}\n                  className='btn'\n                  disabled={this.props.visual}>\n                    Clear Path\n                </button>\n              </li>\n              <li className='nav-item dropdown'>\n                <button\n                  className='btn dropdown-toggle'\n                  type='button'\n                  data-toggle='dropdown'\n                  disabled={this.props.visual}\n                >\n                    Speed <span className='caret'/>\n                </button>\n                <ul className='dropdown-menu'>\n                  <li onClick={() => this.props.newSpeed(1)}>Fast\n                  </li>\n                  <li onClick={() => this.props.newSpeed(350)}>Medium\n                  </li>\n                  <li onClick={() => this.props.newSpeed(750)}>Slow\n                  </li>\n                </ul>\n              </li>\n            </ul>\n          </div>\n        </nav>\n        <div className='d-flex flex-row flex-wrap m-2 justify-content-around'\n          id='Legend'>\n          <div className='d-flex p-2'>Start:\n            <div\n              style={{\n                width: \"20px\",\n                height: \"20px\",\n                backgroundColor: \"#71b340\",\n                WebkitUserSelect: \"none\",\n              }}\n            >\n            </div>\n          </div>\n          <div className='d-flex p-2'>End:\n            <div\n              style={{\n                width: \"20px\",\n                height: \"20px\",\n                backgroundColor: \"#ee0000\",\n                WebkitUserSelect: \"none\",\n              }}\n            >\n            </div>\n          </div>\n          <div className='d-flex p-2'>Wall:\n            <div\n              style={{\n                width: \"20px\",\n                height: \"20px\",\n                backgroundColor: \"#540b0e\",\n                WebkitUserSelect: \"none\",\n              }}\n            >\n            </div>\n          </div>\n          <div className='d-flex p-2'>Visited Node:\n            <div\n              style={{\n                width: \"20px\",\n                height: \"20px\",\n                backgroundColor: \"#e09891\",\n                WebkitUserSelect: \"none\",\n              }}\n            >\n            </div>\n          </div>\n          <div className='d-flex p-2'>Shortest Path Node:\n            <div\n              style={{\n                width: \"20px\",\n                height: \"20px\",\n                backgroundColor: \"#fee440\",\n                WebkitUserSelect: \"none\",\n              }}\n            >\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nNavbar.propTypes = {\n  clearWalls: PropTypes.func,\n  clearPath: PropTypes.func,\n  randomize: PropTypes.func,\n  newSpeed: PropTypes.func,\n  currentAlgo: PropTypes.string,\n  selectAlgo: PropTypes.func,\n  visualize: PropTypes.func,\n  visual: PropTypes.bool,\n  handle: PropTypes.func,\n  toggleSource: PropTypes.func,\n  toggleDestination: PropTypes.func,\n  changeGrid: PropTypes.func,\n  changeDestination: PropTypes.func,\n  multiDestination: PropTypes.func,\n  multipledestinations: PropTypes.bool,\n};\nexport default Navbar;\n","export const DFS = async function() {\n  const grid = this.state.grid;\n  const flag = 1;\n  const start = this.state.start; const end = this.state.end;\n  const height = this.state.height; const width = this.state.width;\n  const speed = this.state.speed;\n  const par = Array(height).fill().map(() => Array(width).fill(0));\n  par[start[0][0]][start[0][1]] = [start[0][0], start[0][1]];\n  let stack = [start[0]]; // stack for dfs\n  let ok = true;\n  const path = [];\n  while (stack.length !== 0) {\n    const current = stack[stack.length - 1];\n    stack.pop(); // pop from stack\n    if (current[0] < 0 || current[0] >= height) {\n      // for the current to not go out of bounds\n      continue;\n    }\n    if (current[1] < 0 || current[1] >= width) {\n      continue;\n    }\n    if (grid[current[0]][current[1]] === 2 ||\n        grid[current[0]][current[1]] === 1) {\n      continue; // if its a wall or visited cell, continue\n    }\n    if (grid[current[0]][current[1]] === 3) {\n      if (ok) {\n        ok = false;\n      } else {\n        continue;\n      }\n    }\n    path.push([current[0], current[1]]);\n    if (grid[current[0]][current[1]] === 4) {\n      this.setState({grid, pointer: current});\n      await new Promise((done) =>\n        setTimeout(() => done(), this.state.speed));\n      break;\n    } else {\n      const list = []; // temporary array to store next points\n      list.push([current[0] + 1, current[1]]); // Go right\n      list.push([current[0], current[1] + 1]); // Go Above\n      list.push([current[0] - 1, current[1]]); // Go Left\n      list.push([current[0], current[1] - 1]); // Go below\n      if (grid[current[0]][current[1]] !== 3) {\n        this.state.grid[current[0]][current[1]] = 2;\n      }\n      stack = stack.concat(list);\n    }\n    this.setState({grid, pointer: current});\n    await new Promise((done) =>\n      setTimeout(() => done(), speed));// To slow down the speed of Animation\n  }\n  if (flag === 0) {\n    this.setState({grid});\n  }\n  const pointer = this.state.pointer;\n  if (pointer[0] !== end[0][0] || pointer[1] !== end[0][1]) {\n    this.showModal();\n    this.setState({visual: false});\n    return;\n  }\n  await this.pathdisplay(path);\n};\n","\nconst top = 0;\nconst parent = (i) => ((i + 1) >>> 1) - 1;\nconst left = (i) => (i << 1) + 1;\nconst right = (i) => (i + 1) << 1;\n/**\n * from https://stackoverflow.com/a/42919752\n */\nclass PriorityQueue {\n  /**\n   *\n   * @param {anything} comparator\n   */\n  constructor(comparator = (a, b) => a < b) {\n    this._heap = [];\n    this._comparator = comparator;\n  }\n\n  /**\n   *  size of priority queue\n   * @return {number}\n   */\n  size() {\n    return this._heap.length;\n  }\n\n  /**\n   * returns if priority queue is empty\n   * @return {boolean}\n   */\n  isEmpty() {\n    return this.size() === 0;\n  }\n\n  /**\n   * returns the top element of priority queue\n   * @return {*}\n   */\n  peek() {\n    return this._heap[parseInt(top, 10)];\n  }\n\n  /**\n   * pushes values to the priority queue\n   * @param {anything} values\n   * @return {number}\n   */\n  push(...values) {\n    values.forEach((value) => {\n      this._heap.push(value);\n      this._siftUp();\n    });\n    return this.size();\n  }\n\n  /**\n   *  pop from priority queue\n   * @return {*}\n   */\n  pop() {\n    const poppedValue = this.peek();\n    const bottom = this.size() - 1;\n    if (bottom > top) {\n      this._swap(top, bottom);\n    }\n    this._heap.pop();\n    this._siftDown();\n    return poppedValue;\n  }\n\n  /**\n   *\n   * @param {number} value\n   * @return {*}\n   */\n  replace(value) {\n    const replacedValue = this.peek();\n    this._heap[parseInt(top, 10)] = value;\n    this._siftDown();\n    return replacedValue;\n  }\n\n  /**\n   *\n   * @param {number} i\n   * @param {number} j\n   * @return {boolean}\n   * @private\n   */\n  _greater(i, j) {\n    return this._comparator(this._heap[parseInt(i, 10)], this._heap[parseInt(j, 10)]);\n  }\n\n  /**\n   *\n   * @param {number} i\n   * @param {number} j\n   * @private\n   */\n  _swap(i, j) {\n    [this._heap[parseInt(i, 10)], this._heap[parseInt(j, 10)]] =\n        [this._heap[parseInt(j, 10)], this._heap[parseInt(i, 10)]];\n  }\n\n  /**\n   *\n   * @private\n   */\n  _siftUp() {\n    let node = this.size() - 1;\n    while (node > top && this._greater(node, parent(node))) {\n      this._swap(node, parent(node));\n      node = parent(node);\n    }\n  }\n\n  /**\n   *\n   * @private\n   */\n  _siftDown() {\n    let node = top;\n    while (\n      (left(node) < this.size() && this._greater(left(node), node)) ||\n            (right(node) < this.size() && this._greater(right(node), node))\n    ) {\n      const maxChild = (right(node) < this.size() &&\n          this._greater(right(node), left(node))) ?\n          right(node) : left(node);\n      this._swap(node, maxChild);\n      node = maxChild;\n    }\n  }\n}\nexport default PriorityQueue;\n","import PriorityQueue from \"./customPriorityQueue\";\n\nexport const Dijkstra = async function() {\n  const start = this.state.start; const end = this.state.end;\n  const height = this.state.height; const width = this.state.width;\n  const queue = new PriorityQueue((a, b) => a[1] < b[1]);\n  queue.push([start[0], 0]);\n  const grid = this.state.grid;\n  const dist = Array(height).fill().map(() =>\n    Array(width).fill(100000));\n  const par = Array(height).fill().map(() =>\n    Array(width).fill(0));\n  this.setState({path: [], pointer: start[0]});\n  dist[start[0][0]][start[0][1]] = 0;\n  par[start[0][0]][start[0][1]] =\n      [start[0][0], start[0][1]];\n  let ok = true;\n  while (queue.size() !== 0) {\n    const current = queue.peek()[0];\n    queue.pop(); // pop the queue\n    if (grid[current[0]][current[1]] === 1 ||\n        grid[current[0]][current[1]] === 2) {\n      continue; // if a wall or visited continue\n    }\n    if (grid[current[0]][current[1]] === 3) {\n      if (ok) {\n        ok = false;\n      } else {\n        continue;\n      } // if you are again pushing the source point, its !ok\n    }\n    if (grid[current[0]][current[1]] === 4) {\n      this.setState({grid, pointer: current});\n      await new Promise((done) =>\n        setTimeout(() => done(), this.state.speed));\n      break;\n    } else {\n      // dijkstra picks the minimum weight path,\n      // updates it in its distance array\n      if (current[0] !== height - 1 &&\n          grid[current[0] + 1][current[1]] !== 2) {\n        if (dist[current[0] + 1][current[1]] >\n            dist[current[0]][current[1]] + 1) {\n          dist[current[0] + 1][current[1]] = dist[current[0]][current[1]] + 1;\n          par[current[0] + 1][current[1]] = [current[0], current[1]];\n          queue.push([[current[0] + 1, current[1]],\n            dist[current[0] + 1][current[1]]]);\n        }\n      }\n      if (current[1] !== width - 1 &&\n          grid[current[0]][current[1] + 1] !== 2) {\n        if (dist[current[0]][current[1] + 1] >\n            dist[current[0]][current[1]] + 1) {\n          dist[current[0]][current[1] + 1] = dist[current[0]][current[1]] + 1;\n          par[current[0]][current[1] + 1] = [current[0], current[1]];\n          queue.push([[current[0], current[1] + 1],\n            dist[current[0]][current[1] + 1]]);\n        }\n      }\n      if (current[0] !== 0 && grid[current[0] - 1][current[1]] !== 2) {\n        if (dist[current[0] - 1][current[1]] >\n            dist[current[0]][current[1]] + 1) {\n          dist[current[0] - 1][current[1]] = dist[current[0]][current[1]] + 1;\n          par[current[0] - 1][current[1]] = [current[0], current[1]];\n          queue.push([[current[0] - 1, current[1]],\n            dist[current[0] - 1][current[1]]]);\n        }\n      }\n      if (current[1] !== 0 && grid[current[0]][current[1] - 1] !== 2) {\n        if (dist[current[0]][current[1] - 1] >\n            dist[current[0]][current[1]] + 1) {\n          dist[current[0]][current[1] - 1] = dist[current[0]][current[1]] + 1;\n          par[current[0]][current[1] - 1] = [current[0], current[1]];\n          queue.push([[current[0], current[1] - 1],\n            dist[current[0]][current[1]-1]]);\n        }\n      }\n      if (grid[current[0]][current[1]] !== 3) {\n        grid[current[0]][current[1]] = 2; // mark it as visited\n      }\n      this.setState({grid, pointer: current});\n      await new Promise((done) =>\n        setTimeout(() => done(), this.state.speed));\n    }\n  }\n  if (this.state.pointer[0] !== end[0][0] ||\n      this.state.pointer[1] !== end[0][1]) {\n    this.showModal(); // return if path not found\n    this.setState({visual: false});\n    return;\n  }\n  let ptr = [end[0][0], end[0][1]];\n  ok = true;\n  while (ok) {\n    this.state.path = [...this.state.path, ptr];\n    if (ptr[0] === start[0][0] &&\n        ptr[1] === start[0][1]) {\n      ok = false;\n    } else {\n      ptr = par[ptr[0]][ptr[1]];\n    }\n  }\n  this.state.path = this.state.path.reverse();\n  await this.pathdisplay(this.state.path);\n};\n","const directions = [[0, 1], [1, 0], [0, -1], [-1, 0]];\nconst isFeasable = (i, j, grid) => {\n  if (i < 0 || i >=grid.length || j < 0 || j >=grid[0].length) {\n    return false;\n  }\n  return (grid[parseInt(i, 10)][parseInt(j, 10)] === 0 ||\n      grid[parseInt(i, 10)][parseInt(j, 10)] === 4);\n};\n\nconst isFeasable2 = (i, j, grid) => {\n  if (i < 0 || i >=grid.length || j < 0 || j >=grid[0].length) {\n    return false;\n  }\n  return !(grid[parseInt(i, 10)][parseInt(j, 10)] === 1 ||\n      grid[parseInt(i, 10)][parseInt(j, 10)] === 3 ||\n      grid[parseInt(i, 10)][parseInt(j, 10)] === 4);\n};\n\nexport const neighbors = (i, j, grid) => {\n  const answer = [];\n  for (const direction of directions) {\n    const neighbor = [i + direction[0], j + direction[1]];\n    if (isFeasable(neighbor[0], neighbor[1], grid)) {\n      answer.push([neighbor[0], neighbor[1]]);\n    }\n  }\n  return answer;\n};\n\nexport const biNeighbors = (i, j, grid) => {\n  const answer = [];\n  for (const direction of directions) {\n    const neighbor = [i + direction[0], j + direction[1]];\n    if (isFeasable2(neighbor[0], neighbor[1], grid)) {\n      answer.push([neighbor[0], neighbor[1]]);\n    }\n  }\n  return answer;\n};\n\n\n","import PriorityQueue from \"./customPriorityQueue\";\nimport {neighbors} from \"./Utility\";\n\nexport const AStar = async function(w1, w2) {\n  this.computeHeuristics();\n  this.setState({path: [], pointer: this.state.start[0]});\n  const height = this.state.height; const width = this.state.width;\n  const pq = new PriorityQueue((a, b) => a[1] < b[1]);\n  const start = this.state.start; const end = this.state.end;\n  const heuristics = this.state.heuristics; const speed = this.state.speed;\n  pq.push([start[0], heuristics[start[0][0]][start[0][1]]]);\n  const dp = Array(height).fill().map(() => Array(width).fill([]));\n  const par = Array(height).fill().map(() => Array(width).fill([]));\n  par[start[0][0]][start[0][1]] = start[0];\n  while (!pq.isEmpty()) {\n    const grid = this.state.grid;\n    const current = pq.peek()[0];\n    pq.pop();\n    this.setState({pointer: current});\n    if (grid[current[0]][current[1]] === 4) {\n      this.setState({grid, pointer: current});\n      break;\n    }\n    const item = neighbors(current[0], current[1], this.state.grid);\n    for (let i =0; i < item.length; i++) {\n      if ((dp[item[parseInt(i, 10)][0]][item[parseInt(i, 10)][1]].length ===\n          0) ||\n          (dp[item[parseInt(i, 10)][0]][item[parseInt(i, 10)][1]].length >\n              dp[current[0]][current[1]].length + 1)) {\n        pq.push([item[parseInt(i, 10)],\n          w1*(dp[current[0]][current[1]].length+1) +\n          w2*this.state.\n              heuristics[item[parseInt(i, 10)][0]][item[parseInt(i, 10)][1]]]);\n        par[item[parseInt(i, 10)][0]][item[parseInt(i, 10)][1]] = current;\n        dp[item[parseInt(i, 10)][0]][item[parseInt(i, 10)][1]] =\n            [...dp[current[0]][current[1]], current];\n      }\n    }\n    grid[current[0]][current[1]] = 2;\n    this.setState({grid, pointer: current});\n    await new Promise((done) =>\n      setTimeout(() => done(), speed));\n  }\n  const pointer = this.state.pointer;\n  if (pointer[0] !== end[0][0] || pointer[1] !== end[0][1]) {\n    this.showModal(); // return not found\n    this.setState({visual: false});\n    return;\n  }\n  let ptr = end[0];\n  let path = [];\n  let ok = true;\n  while (ok) {\n    path = [...path, ptr];\n    if (ptr[0] === start[0][0] &&\n        ptr[1] === start[0][1]) {\n      ok = false;\n    } else {\n      ptr = par[ptr[0]][ptr[1]];\n    }\n  }\n  this.state.path = path.reverse();\n  await this.pathdisplay(this.state.path);\n};\n","import PriorityQueue from \"./customPriorityQueue\";\nexport const TSP = async function() {\n  const unvisited = new Set();\n  for (const item of this.state.end) {\n    unvisited.add(item);\n  }\n  let now = this.state.start[0];\n  let totalpath = [];\n  let pathfound = true;\n  while (unvisited.size) {\n    const togo = this.findOptimalVertex(this, unvisited, now);\n    unvisited.delete(togo);\n    const sourceMapped = this.state.graph.map2[now];\n    const destinationMapped = this.state.graph.map2[togo];\n    if (this.state.graph.allPairShortest[sourceMapped][destinationMapped] === 1000000) {\n      pathfound = false;\n      break;\n    }\n    const newpath = await this.aStarForTSP(this, now, togo);\n    totalpath = totalpath.concat(newpath);\n    now = togo;\n  }\n  if (pathfound) {\n    await this.pathdisplay(totalpath);\n  } else {\n    this.showModal();\n    this.setState({visual: false});\n  }\n};\n\nexport const aStarForTSP = async function(AppState, start, end) {\n  const heuristics = AppState.state.heuristics;\n  for (let i = 0; i < AppState.state.height; i++) {\n    for (let j = 0; j < AppState.state.width; j++) {\n      heuristics[parseInt(i, 10)][parseInt(j, 10)] =\n          Math.abs(end[0]-i) + Math.abs(end[1]-j);\n    }\n  }\n  AppState.setState({heuristics,\n    path: [], pointer: start, bi: true});\n  const pq = new PriorityQueue((a, b) => a[1] < b[1]);\n  pq.push([start, AppState.state.heuristics[start[0]][start[1]]]);\n  const dp = Array(30)\n      .fill()\n      .map(() => Array(40).fill([]));\n  while (!pq.isEmpty()) {\n    const grid = AppState.state.grid;\n    const current = pq.peek()[0];\n    pq.pop();\n    AppState.setState({current});\n    if (grid[current[0]][current[1]] === 4) {\n      AppState.setState({grid, pointer: current});\n      break;\n    }\n    if (current[1] !== AppState.state.width - 1 &&\n        (grid[current[0]][current[1] + 1] === 0 ||\n            grid[current[0]][current[1] + 1] === 4)) {\n      if (dp[current[0]][current[1] + 1].length === 0 ||\n          dp[current[0]][current[1] + 1].length >\n          [...dp[current[0]][current[1]], current].length) {\n        pq.push([[current[0], current[1] + 1],\n          dp[current[0]][current[1]].length+\n        AppState.state.heuristics[current[0]][current[1] + 1]]);\n        dp[current[0]][current[1] + 1] =\n            [...dp[current[0]][current[1]], current];\n      }\n    }\n    if (current[0] !== AppState.state.height - 1 &&\n        ((grid[current[0] + 1][current[1]] === 0) ||\n            grid[current[0] + 1][current[1]] === 4)) {\n      if (dp[current[0] + 1][current[1]].length === 0 ||\n          dp[current[0] + 1][current[1]].length >\n          [...dp[current[0]][current[1]], current]) {\n        pq.push([[current[0] + 1, current[1]],\n          dp[current[0]][current[1]].length+\n        AppState.state.heuristics[current[0] + 1][current[1]]]);\n        dp[current[0] + 1][current[1]] =\n            [...dp[current[0]][current[1]], current];\n      }\n    }\n    if (current[0] !== 0 && (grid[current[0] - 1][current[1]] === 0 ||\n        (grid[current[0] - 1][current[1]] === 4))) {\n      if (dp[current[0] - 1][current[1]].length === 0 ||\n          dp[current[0] - 1][current[1]].length >\n          [...dp[current[0]][current[1]], current]) {\n        pq.push([[current[0] - 1,\n          current[1]], dp[current[0]][current[1]].length+\n        AppState.state.heuristics[current[0] - 1][current[1]]]);\n        dp[current[0] - 1][current[1]] =\n            [...dp[current[0]][current[1]], current];\n      }\n    }\n    if (current[1] !== 0 && (grid[current[0]][current[1] - 1] === 0 ||\n        (grid[current[0]][current[1]-1] === 4))) {\n      if (dp[current[0]][current[1] - 1].length === 0 ||\n          dp[current[0]][current[1] - 1].length >\n          [...dp[current[0]][current[1]], current].length) {\n        pq.push([[current[0], current[1] - 1],\n          dp[current[0]][current[1]].length+\n        AppState.state.heuristics[current[0]][current[1] - 1]]);\n        dp[current[0]][current[1] - 1] =\n            [...dp[current[0]][current[1]], current];\n      }\n    }\n    grid[current[0]][current[1]] = 2; // AppState node as visited\n    AppState.setState({grid, pointer: current});\n    await new Promise((done) =>\n      setTimeout(() => done(), AppState.state.speed));\n  }\n  const grid = AppState.state.grid;\n  for (let i = 0; i < AppState.state.height; i++) {\n    for (let j = 0; j < AppState.state.width; j++) {\n      if (grid[parseInt(i, 10)][parseInt(j, 10)] ===2) {\n        grid[parseInt(i, 10)][parseInt(j, 10)] = 0;\n      }\n    }\n  }\n  grid[start[0]][start[1]] = 0;\n  grid[end[0]][end[1]] = 3;\n  await AppState.setState({grid});\n  return dp[end[0]][end[1]];\n};\nexport const findOptimalVertex = (AppState, unvisited, source) => {\n  const pq = new PriorityQueue((a, b) => a[1] < b[1]);\n  const sourceMapped = AppState.state.graph.map2[source];\n  for (const item of unvisited) {\n    const destinationMapped = AppState.state.graph.map2[item];\n    pq.push([item,\n      AppState.state.graph.allPairShortest[sourceMapped][destinationMapped]]);\n  }\n  return pq.peek()[parseInt(0, 10)];\n};\n","import {neighbors} from \"./Utility\";\nexport const BFS = async function() {\n  const start = this.state.start; const end = this.state.end;\n  const height = this.state.height; const width = this.state.width;\n  const speed = this.state.speed; const grid = this.state.grid;\n  this.setState({pointer: start[0]});\n  const queue = [start[0]]; // queue needed in bfs\n  const par = Array(height).fill().map(() => Array(width).fill([]));\n  par[start[0][0]][start[0][1]] = start[0];\n  let ok = true;\n  while (queue.length !== 0) {\n    const current = queue[0];\n    queue.shift(); // pop the first item from the queue\n    if (grid[current[0]][current[1]] === 1 ||\n        grid[current[0]][current[1]] === 2) {\n      continue;\n      // if its a wall or already visited cell then continue\n    }\n    if (grid[current[0]][current[1]] === 3) {\n      // if again visits the start point\n      if (ok) {\n        ok = false;\n      } else {\n        continue;\n      }\n    }\n    if (grid[current[0]][current[1]] === 4) {\n      // reached goal\n      this.setState({grid});\n      this.setState({pointer: current});\n      await new Promise((done) =>\n        setTimeout(() => done(), speed));\n      break;\n    } else {\n      const item = neighbors(current[0], current[1], this.state.grid);\n      // finding neighbours of the current cell\n      for (const neighbor of item) {\n        par[neighbor[0]][neighbor[1]] = [current[0], current[1]];\n        queue.push([neighbor[0], neighbor[1]]);\n        // push the neighbours in the queue\n      }\n      if (grid[current[0]][current[1]] !== 3) {\n        grid[current[0]][current[1]] = 2;\n        // if not end/start, mark the node as visited\n      }\n      this.setState({grid, pointer: current});\n\n      await new Promise((done) =>\n        setTimeout(() => done(), speed)); // to slow down the speed of animation\n    }\n  }\n  const pointer = this.state.pointer;\n  if (pointer[0] !== end[0][0] || pointer[1] !== end[0][1]) {\n    // display path not found\n    this.showModal();\n    this.setState({visual: false});\n    return;\n  }\n  let ptr = end[0];\n  let path = [];\n  ok = true;\n  while (ok) {\n    path = [...path, ptr];\n    if (ptr[0] === start[0][0] &&\n        ptr[1] === start[0][1]) {\n      ok = false;\n    } else {\n      ptr = par[ptr[0]][ptr[1]];\n    }\n  }\n  this.state.path = path.reverse();\n  await this.pathdisplay(this.state.path);\n};\n","export const BiBFS = async function() {\n  this.setState({path: [], pointer:\n        this.state.start[0], pointer2: this.state.end[0]});\n  let queue1 = [this.state.start[0]];\n  let queue2 = [this.state.end[0]];\n  const height = this.state.height;\n  const width = this.state.width;\n  const grid = this.state.grid;\n  const directions = [[0, 1], [1, 0], [0, -1], [-1, 0]];\n  let reached = true;\n  const isGoodCell = (i, j) => {\n    if (i < 0 || i >=height || j < 0 || j >=width) {\n      return false;\n    }\n    return !(grid[parseInt(i, 10)][parseInt(j, 10)] === 1 ||\n        grid[parseInt(i, 10)][parseInt(j, 10)]=== 3 ||\n        grid[parseInt(i, 10)][parseInt(j, 10)] === 4);\n  };\n  const start = this.state.start[0];\n  const end = this.state.end[0];\n\n  const par1 = Array(height).fill().map(() => Array(width).fill([]));\n  const par2 = Array(height).fill().map(() => Array(width).fill([]));\n  const visited = Array(height).fill().map(() => Array(width).fill(0));\n\n\n  par1[start[0]][start[1]] = start;\n  par2[end[0]][end[1]] = end;\n\n  let ptr;\n  while (queue1.length !==0 && queue2.length !== 0) {\n    const current = queue1[0]; // current of forward path\n    const revcurrent = queue2[0]; // current pointer of reverse path\n    let flag1=false; let flag2=false;\n    if (visited[current[0]][current[1]] === 2) {\n      ptr = current; break;\n    } else {\n      visited[current[0]][current[1]] = 1;\n    }\n    if (visited[revcurrent[0]][revcurrent[1]] === 1) {\n      ptr = revcurrent; break;\n    } else {\n      visited[revcurrent[0]][revcurrent[1]] = 2;\n    }\n\n    queue1.shift();\n    queue2.shift();\n    const list1 = [];\n    const list2 = [];\n\n    for (const dir of directions) {\n      const neighbour1 = [current[0] + dir[0], current[1] + dir[1]];\n      if (isGoodCell(neighbour1[0], neighbour1[1])) {\n        if (visited[neighbour1[0]][neighbour1[1]] === 1 ) {\n          continue;\n        }\n        if (grid[neighbour1[0]][neighbour1[1]] === 2) {\n          continue;\n        }\n        par1[neighbour1[0]][neighbour1[1]] = current;\n        if (visited[neighbour1[0]][neighbour1[1]] === 2 ) {\n          ptr=neighbour1; flag1=true; break;\n        }\n        if ( neighbour1[0]===start[0] && neighbour1[1]===start[1]) {\n          continue;\n        }\n\n        list1.push(neighbour1);\n        grid[neighbour1[0]][neighbour1[1]] = 2;\n      }\n    }\n    queue1 = queue1.concat(list1);\n    if (flag1) {\n      break;\n    }\n    for (const dir of directions) {\n      const neighbour2 = [revcurrent[0] + dir[0], revcurrent[1] + dir[1]];\n      if (isGoodCell(neighbour2[0], neighbour2[1])) {\n        if (visited[neighbour2[0]][neighbour2[1]] === 2 ) {\n          continue;\n        }\n        if (grid[neighbour2[0]][neighbour2[1]] === 6) {\n          continue;\n        }\n        par2[neighbour2[0]][neighbour2[1]] = revcurrent;\n        if (visited[neighbour2[0]][neighbour2[1]] === 1 ) {\n          ptr = neighbour2; flag2=true; break;\n        }\n\n        if (neighbour2[0]===end[0] && neighbour2[1]===end[1]) {\n          continue;\n        }\n        list2.push(neighbour2);\n        grid[neighbour2[0]][neighbour2[1]] = 6;\n      }\n    }\n    queue2 = queue2.concat(list2);\n    this.setState({grid,\n      pointer: current, pointer2: revcurrent, bi: true});\n    await new Promise((done) =>\n      setTimeout(() => done(), this.state.speed));\n    // To slow down the speed of Animation\n    if (flag1 || flag2) {\n      break;\n    }\n  }\n\n  const breakpoint = ptr;\n  let ok1 = true;\n  while (ok1) {\n    this.state.path = [...this.state.path, ptr];\n    if (ptr === undefined) {\n      reached = false;\n      ok1 = false;\n    } else if (ptr[0] === this.state.start[0][0] &&\n        ptr[1] === this.state.start[0][1]) {\n      ok1 = false;\n    } else {\n      ptr = par1[ptr[0]][ptr[1]];\n    }\n  }\n  if (!reached) {\n    this.showModal(); // return not found\n    this.setState({visual: false});\n    return;\n  }\n  this.state.path = this.state.path.reverse();\n  ptr = breakpoint;\n  let pth2= [];\n  let ok = true;\n  while (ok) {\n    pth2 = [...pth2, ptr];\n    if (ptr === undefined) {\n      reached = false;\n      ok = false;\n      break;\n    } else if (ptr[0] === this.state.end[0][0] &&\n        ptr[1] === this.state.end[0][1]) {\n      ok = false;\n      break;\n    } else {\n      ptr = par2[ptr[0]][ptr[1]];\n    }\n  }\n  if (!reached) {\n    this.showModal(); // return not found\n    this.setState({visual: false});\n    return;\n  }\n  pth2 = pth2.reverse();\n  this.state.path = this.state.path.concat(pth2);\n  await this.pathdisplay(this.state.path);\n};\n","import PriorityQueue from \"./customPriorityQueue\";\nimport {biNeighbors} from \"./Utility\";\nexport const BiAstar = async function() {\n  this.computeHeuristics();\n  const heuristics = this.state.heuristics;\n  const reverseheuristics = this.state.reverseHeuristics;\n  const start = this.state.start[0];\n  const end = this.state.end[0];\n  const height = this.state.height; const width = this.state.width;\n  let meetpoint1; let meetpoint2; // the breakpoint from either direction\n  this.setState({pointer: start[0], pointer2: end[0], bi: true});\n  const visited1 = Array(height).fill().map(() =>\n    Array(width).fill(0));\n  // visited array to aid finding and stopping at common points\n  const visited2 = Array(height).fill().map(() =>\n    Array(width).fill(0));\n  const forwardPQ = new PriorityQueue((a, b) => a[1] < b[1]);\n  // forward PQ for points from Start end\n  const backwardPQ = new PriorityQueue((a, b) => a[1] < b[1]);\n  // Priority queue for points from the other end\n  forwardPQ.push([start, 0]);\n  backwardPQ.push([end, 0]);\n  // Parent arrays to restore the path\n  const par1 = Array(height).fill().map(() => Array(width).fill([]));\n  const par2 = Array(height).fill().map(() => Array(width).fill([]));\n  par1[start[0]][start[1]] = start;\n  par2[end[0]][end[1]] = end;\n  let reached = true;\n  let ok = 0;\n  // initialising the distance array to a Maxima\n  const dist1 = Array(height).fill().map(() =>\n    Array(width).fill(100000));\n  const dist2 = Array(height).fill().map(() =>\n    Array(width).fill(100000));\n  dist1[start[0]][start[1]] = 0;\n  dist2[end[0]][end[1]] = 0;\n\n  while (!forwardPQ.isEmpty() && !backwardPQ.isEmpty()) {\n    const grid = this.state.grid;\n    const current1 = forwardPQ.peek()[0];\n    const current2 = backwardPQ.peek()[0];\n    this.setState({pointer: current1, pointer2: current2});\n    await new Promise((done) =>\n      setTimeout(() => done(), this.state.speed));\n    visited1[current1[0]][current1[1]] = 1; // marking current pointers visited\n    visited2[current2[0]][current2[1]] = 1;\n    forwardPQ.pop(); backwardPQ.pop();\n    const neighbor1 = biNeighbors(current1[0], current1[1], this.state.grid);\n    const neighbor2 = biNeighbors(current2[0], current2[1], this.state.grid);\n    for (const item of neighbor1) {\n      // iterating over the neighbours from front\n      if (item[0] === start[0] && item[1] === start[1]) {\n        continue;\n      }\n      if (visited2[item[0]][item[1]] === 1) {\n        meetpoint2 = item; meetpoint1 = current1;\n        ok = 1;\n        break;\n      }\n\n      if ( dist1[current1[0]][current1[1]] + 1< dist1[item[0]][item[1]]) {\n        dist1[item[0]][item[1]] = dist1[current1[0]][current1[1]] + 1;\n        par1[item[0]][item[1]] = current1;\n        forwardPQ.push([item,\n          dist1[item[0]][item[1]] + heuristics[item[0]][item[1]]]);\n      }\n    }\n    if (ok === 1) {\n      break;\n    }\n    // iterating over neighbours from back\n    for (const item of neighbor2) {\n      if (item[0] === end[0] && item[1] === end[1]) {\n        continue;\n      }\n\n      if (visited1[item[0]][item[1]] === 1) {\n        meetpoint2 = current2;\n        meetpoint1 = item;\n        ok = 1;\n        break;\n      }\n      if ( dist2[current2[0]][current2[1]] + 1< dist2[item[0]][item[1]]) {\n        dist2[item[0]][item[1]] = dist2[current2[0]][current2[1]] + 1;\n        par2[item[0]][item[1]] = current2;\n        backwardPQ.push([item,\n          dist2[item[0]][item[1]] + reverseheuristics[item[0]][item[1]]] );\n      }\n    }\n    grid[current1[0]][current1[1]] = 2;\n    grid[current2[0]][current2[1]] = 6;\n    grid[start[0]][start[1]]=3;\n    grid[end[0]][end[1]]=4;\n    this.setState({grid});\n    if (ok === 1) {\n      break;\n    }\n  }\n\n  // Retrieving the found path\n  let ptr = meetpoint1;\n  let ok1 = true;\n  while (ok1) {\n    this.state.path = [...this.state.path, ptr];\n    if (ptr === undefined) {\n      reached = false;\n      ok1 = false;\n    } else if (ptr[0] === start[0] && ptr[1] === start[1]) {\n      ok1 = false;\n    } else {\n      ptr = par1[ptr[0]][ptr[1]];\n    }\n  }\n  if (!reached) {\n    this.showModal(); // return not found\n    this.setState({visual: false});\n    return;\n  }\n  this.state.path = this.state.path.reverse();\n  ptr = meetpoint2;\n  let pth2= [];\n  ok = true;\n  while (ok) {\n    pth2 = [...pth2, ptr];\n    if (ptr === undefined) {\n      reached = false;\n      ok = false;\n    } else if (ptr[0] === end[0] && ptr[1] === end[1]) {\n      ok = false;\n    } else {\n      ptr = par2[ptr[0]][ptr[1]];\n    }\n  }\n  if (!reached) {\n    this.showModal(); // return not found\n    this.setState({visual: false});\n    return;\n  }\n  pth2 = pth2.reverse();\n  this.state.path = this.state.path.concat(pth2);\n  // console.log(this.state.path);\n  await this.pathdisplay(this.state.path);\n};\n","import PriorityQueue from \"./customPriorityQueue\";\nimport {biNeighbors} from \"./Utility\";\n\nexport const BidirectionalDijkstra = async function() {\n  const start = this.state.start[0];\n  const end = this.state.end[0];\n  const height = this.state.height; const width = this.state.width;\n  let meetpoint1; let meetpoint2; // the breakpoint from either direction\n  this.setState({pointer: start[0], pointer2: end[0], bi: true});\n  const visited1 = Array(height).fill().map(() =>\n    Array(width).fill(0));\n  // visited array to aid finding and stopping at common points\n  const visited2 = Array(height).fill().map(() =>\n    Array(width).fill(0));\n  const forwardPQ = new PriorityQueue((a, b) => a[1] < b[1]);\n  // forward PQ for points from Start end\n  const backwardPQ = new PriorityQueue((a, b) => a[1] < b[1]);\n  // Priority queue for points from the other end\n  forwardPQ.push([start, 0]);\n  backwardPQ.push([end, 0]);\n  // Parent arrays to restore the path\n  const par1 = Array(height).fill().map(() => Array(width).fill([]));\n  const par2 = Array(height).fill().map(() => Array(width).fill([]));\n  par1[start[0]][start[1]] = start;\n  par2[end[0]][end[1]] = end;\n  let reached = true;\n  let ok = 0;\n  // initialising the distance array to a Maxima\n  const dist1 = Array(height).fill().map(() =>\n    Array(width).fill(100000));\n  const dist2 = Array(height).fill().map(() =>\n    Array(width).fill(100000));\n  dist1[start[0]][start[1]] = 0;\n  dist2[end[0]][end[1]] = 0;\n\n  while (!forwardPQ.isEmpty() && !backwardPQ.isEmpty()) {\n    const grid = this.state.grid;\n    const current1 = forwardPQ.peek()[0];\n    const current2 = backwardPQ.peek()[0];\n    this.setState({pointer: current1, pointer2: current2});\n    await new Promise((done) =>\n      setTimeout(() => done(), this.state.speed));\n    visited1[current1[0]][current1[1]] = 1; // marking current pointers visited\n    visited2[current2[0]][current2[1]] = 1;\n    forwardPQ.pop(); backwardPQ.pop();\n    const neighbor1 = biNeighbors(current1[0], current1[1], this.state.grid);\n    const neighbor2 = biNeighbors(current2[0], current2[1], this.state.grid);\n    for (const item of neighbor1) {\n      // iterating over the neighbours from front\n      if (item[0] === start[0] && item[1] === start[1]) {\n        continue;\n      }\n      if (visited2[item[0]][item[1]] === 1) {\n        meetpoint2 = item; meetpoint1 = current1;\n        ok = 1;\n        break;\n      }\n\n      if ( dist1[current1[0]][current1[1]] + 1< dist1[item[0]][item[1]]) {\n        dist1[item[0]][item[1]] = dist1[current1[0]][current1[1]] + 1;\n        par1[item[0]][item[1]] = current1;\n        forwardPQ.push([item,\n          dist1[item[0]][item[1]]]);\n      }\n    }\n    if (ok === 1) {\n      break;\n    }\n    // iterating over neighbours from back\n    for (const item of neighbor2) {\n      if (item[0] === end[0] && item[1] === end[1]) {\n        continue;\n      }\n\n      if (visited1[item[0]][item[1]] === 1) {\n        meetpoint2 = current2;\n        meetpoint1 = item;\n        ok = 1;\n        break;\n      }\n      if ( dist2[current2[0]][current2[1]] + 1< dist2[item[0]][item[1]]) {\n        dist2[item[0]][item[1]] = dist2[current2[0]][current2[1]] + 1;\n        par2[item[0]][item[1]] = current2;\n        backwardPQ.push([item,\n          dist2[item[0]][item[1]]] );\n      }\n    }\n    grid[current1[0]][current1[1]] = 2;\n    grid[current2[0]][current2[1]] = 6;\n    grid[start[0]][start[1]]=3;\n    grid[end[0]][end[1]]=4;\n    this.setState({grid});\n    if (ok === 1) {\n      break;\n    }\n  }\n\n  // Retrieving the found path\n  let ptr = meetpoint1;\n  let ok1 = true;\n  while (ok1) {\n    this.state.path = [...this.state.path, ptr];\n    if (ptr === undefined) {\n      reached = false;\n      ok1 = false;\n    } else if (ptr[0] === start[0] && ptr[1] === start[1]) {\n      ok1 = false;\n    } else {\n      ptr = par1[ptr[0]][ptr[1]];\n    }\n  }\n  if (!reached) {\n    this.showModal(); // return not found\n    this.setState({visual: false});\n    return;\n  }\n  this.state.path = this.state.path.reverse();\n  ptr = meetpoint2;\n  let pth2= [];\n  ok = true;\n  while (ok) {\n    pth2 = [...pth2, ptr];\n    if (ptr === undefined) {\n      reached = false;\n      ok = false;\n    } else if (ptr[0] === end[0] && ptr[1] === end[1]) {\n      ok = false;\n    } else {\n      ptr = par2[ptr[0]][ptr[1]];\n    }\n  }\n  if (!reached) {\n    this.showModal(); // return not found\n    this.setState({visual: false});\n    return;\n  }\n  pth2 = pth2.reverse();\n  this.state.path = this.state.path.concat(pth2);\n  // console.log(this.state.path);\n  await this.pathdisplay(this.state.path);\n};\n","import PropTypes from \"prop-types\";\n/**\n *\n */\nclass Graph {\n  /**\n   *\n   * @param {array} grid\n   * @param {number} height\n   * @param {number} width\n   */\n  constructor(grid, height, width) {\n    this.adjacencyList = {};\n    this.allPairShortest = Array(height*width).\n        fill().map(() =>\n          Array(height*width).fill(1000000));\n    this.grid = grid;\n    this.map1 = new Map();\n    this.map2 = new Map();\n    this.height = height;\n    this.width = width;\n    let counter = 0;\n    for (let i = 0; i < this.height; i++) {\n      for (let j = 0; j < this.width; j++) {\n        this.map1[parseInt(counter, 10)] = [[i, j]];\n        this.map2[[i, j]] = counter;\n        counter++;\n      }\n    }\n\n    this.constructGraph();\n    this.floydWarshall();\n  }\n\n  /**\n   *\n   * @param {number} vertex\n   */\n  addVertex(vertex) {\n    if (!this.adjacencyList[parseInt(vertex, 10)]) {\n      this.adjacencyList[parseInt(vertex, 10)] = [];\n    }\n  }\n\n  /**\n   *\n   * @param {number} source\n   * @param {number} destination\n   */\n  addEdge(source, destination) {\n    if (!this.adjacencyList[parseInt(source, 10)]) {\n      this.addVertex(parseInt(source, 10));\n    }\n    if (!this.adjacencyList[parseInt(destination, 10)]) {\n      this.addVertex(parseInt(destination, 10));\n    }\n    this.adjacencyList[parseInt(source, 10)].push(parseInt(destination, 10));\n    this.adjacencyList[parseInt(destination, 10)].push(parseInt(source, 10));\n  }\n\n  /**\n   *\n   * @param {number} i\n   * @param {number} j\n   * @return {boolean}\n   */\n  isNotWall(i, j) {\n    if (i < 0 || i >= this.height || j < 0 || j >= this.width ) {\n      return false;\n    } else {\n      return this.grid[parseInt(i, 10)][parseInt(j, 10)] !== 1;\n    }\n  }\n\n  /**\n   *\n   */\n  constructGraph() {\n    const directions = [[0, 1], [1, 0], [0, -1], [-1, 0]];\n    for (let i = 0; i < this.height; i++) {\n      for (let j = 0; j < this.width; j++) {\n        if (this.isNotWall(i, j)) {\n          for (const direction of directions) {\n            const neighbor = [i + direction[0], j + direction[1]];\n            if (this.isNotWall(neighbor[0], neighbor[1])) {\n              const x = this.map2[[i, j]];\n              const y = this.map2[[neighbor[0], neighbor[1]]];\n              this.addEdge(x, y);\n              this.allPairShortest[parseInt(x, 10)][parseInt(y, 10)] = 1;\n              this.allPairShortest[parseInt(y, 10)][parseInt(x, 10)] = 1;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   *Floyd Warshal Algo to store distances betwenn all pairs of vertices\n   */\n  floydWarshall() {\n    for (let k = 0; k < this.height*this.width; k++) {\n      for (let i = 0; i < this.height*this.width; i++) {\n        for (let j = 0; j < this.height*this.width; j++) {\n          this.allPairShortest[parseInt(i, 10)][parseInt(j, 10)] =\n              Math.min(this.allPairShortest[parseInt(i, 10)][parseInt(j, 10)],\n                  this.allPairShortest[parseInt(i, 10)][parseInt(k, 10)] +\n                  this.allPairShortest[parseInt(k, 10)][parseInt(j, 10)]);\n          this.allPairShortest[parseInt(j, 10)][parseInt(i, 10)] =\n              this.allPairShortest[parseInt(i, 10)][parseInt(j, 10)];\n        }\n      }\n    }\n  }\n}\n\nGraph.propTypes = {\n  grid: PropTypes.array,\n};\nexport default Graph;\n\n","import React, {Component} from \"react\";\nimport Grid from \"./components/Grid\";\nimport Navbar from \"./components/Navbar\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport {DFS} from \"./Algo/dfs\";\nimport {Dijkstra} from \"./Algo/Dijkstra\";\nimport {AStar} from \"./Algo/AStar\";\nimport {findOptimalVertex} from \"./Algo/TSP\";\nimport {aStarForTSP} from \"./Algo/TSP\";\nimport {TSP} from \"./Algo/TSP\";\nimport {BFS} from \"./Algo/BFS\";\nimport {BiBFS} from \"./Algo/BiBFS\";\nimport {BiAstar} from \"./Algo/BiAstar\";\nimport {BidirectionalDijkstra} from \"./Algo/BidirectionalDijkstra\";\nimport Graph from \"./Algo/Graph\";\n// This is the modal to display path not found\nconst D = ({handleClose, show}) => {\n  return (\n    <>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n        style={{\n          opacity: \"90%\",\n          backgroundColor: \"#000000\",\n          color: \"#fee440\",\n        }}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Uh-Oh!!</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n                    PATH TO THE TARGET NOT FOUND!\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n/**\n * Class for our Application\n */\nclass App extends Component {\n  /**\n   *\n   * @param {props} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      height: 20, // height of the grid\n      width: 20, // width of the grid\n      start: [[10, 9]], // start position\n      end: [[10, 15]], // end position\n      grid: Array(20).fill().map(() => Array(20).fill(0)),\n      speed: 0.100, // speed for animation\n      pointer: [], // store the pointer for visualization\n      pointer2: [], // for bidirectional visualization\n      modalshow: false,\n      heuristics: Array(20).fill().map(() => Array(20).fill(0)),\n      reverseHeuristics: Array(20).fill().map(() => Array(20).fill(0)),\n      path: [],\n      graph: null,\n      changeSource: false,\n      changeDestination: false,\n      multipledestinations: false,\n      visual: false,\n      currentAlgo: \"Not Selected\",\n      bi: false, // boolean indicator for bidirectional algos\n    };\n    this.state.grid[this.state.start[0][0]][this.state.start[0][1]] = 3;\n    // special point : start point\n\n    this.state.grid[this.state.end[0][0]][this.state.end[0][1]] = 4;\n    // special point : end point\n\n    this.computeHeuristics();\n  }\n    dfs = DFS.bind(this);\n    bfs= BFS.bind(this);\n    dijkstra = Dijkstra.bind(this);\n    aStar = AStar.bind(this);\n    tsp = TSP.bind(this);\n    aStarForTSP = aStarForTSP.bind(this);\n    findOptimalVertex = findOptimalVertex.bind(this);\n    biBFS = BiBFS.bind(this);\n    biAstar = BiAstar.bind(this);\n    bidirectionalDijkstra = BidirectionalDijkstra.bind(this);\n\n    toggleSource=() => this.setState({changeSource: !this.state.changeSource});\n    toggleDestination = () => {\n      if (this.state.multipledestinations) {\n        this.setState({changeDestination: true});\n      } else {\n        this.setState({changeDestination: !this.state.changeDestination});\n      }\n    }\n    changedSource=(i, j) => {\n      const grid = this.state.grid;\n      grid[this.state.start[0][0]][this.state.start[0][1]] = 0;\n      grid[parseInt(i, 10)][parseInt(j, 10)] = 3; // special point : end point\n      this.setState({\n        changeSource: !this.state.changeSource,\n        start: [[i, j]],\n        grid,\n      });\n    }\n    changedDestination = (i, j) => {\n      const grid = this.state.grid;\n      grid[parseInt(i, 10)][parseInt(j, 10)] = 4; // special point : end point\n      if (!this.state.multipledestinations) {\n        grid[this.state.end[0][0]][this.state.end[0][1]] = 0;\n      } else {\n        this.setState({end: [...this.state.end, [i, j]], grid});\n        return;\n      }\n\n      this.setState({\n        changeDestination: !this.state.changeDestination,\n        end: [[i, j]],\n        grid,\n      });\n    }\n    multiDestination = () => {\n      this.setState({multipledestinations: !this.state.multipledestinations});\n    }\n    showModal = () => this.setState({modalshow: true});\n    hideModal = () => this.setState({modalshow: false});\n    computeHeuristics= () => {\n      const heuristics = this.state.heuristics;\n      const start = this.state.start; const end = this.state.end;\n      const height = this.state.height; const width = this.state.width;\n      for (let i = 0; i < height; i++) {\n        for (let j = 0; j < width; j++) {\n          heuristics[parseInt(i, 10)][parseInt(j, 10)] =\n              Math.abs(end[0][0]-i) + Math.abs(end[0][1]-j);\n        }\n      }\n\n      const reverseHeuristics = this.state.reverseHeuristics;\n      for (let i = 0; i < height; i++) {\n        for (let j = 0; j < width; j++) {\n          reverseHeuristics[parseInt(i, 10)][parseInt(j, 10)] =\n              Math.abs(start[0][0]-i) + Math.abs(start[0][1]-j);\n        }\n      }\n\n      this.setState({heuristics, reverseHeuristics});\n    }\n    randomizeMatrix = () => {\n      this.clearGrid();\n      const newGrid = Array(this.state.height).fill().map(() =>\n        Array(this.state.width).fill(0));\n      for (let i = 0; i < this.state.height; i++) {\n        for (let j = 0; j < this.state.width; j++) {\n          newGrid[parseInt(i, 10)][parseInt(j, 10)] =\n              (Math.floor(Math.random() * 10) % 2);\n          // random values of zero or one to generate a random grid of\n          // walls amd empty cells\n        }\n      }\n      newGrid[this.state.start[0][0]][this.state.start[0][1]] = 3;\n      // special point : start\n      newGrid[this.state.end[0][0]][this.state.end[0][1]] = 4;\n      // special point : end\n      this.setState({grid: newGrid});\n    }\n    clearGrid = () => {\n      const newGrid = Array(this.state.height).fill().map(() =>\n        Array(this.state.width).fill(0));\n      newGrid[this.state.start[0][0]][this.state.start[0][1]] = 3;\n      // special point : start\n      newGrid[this.state.end[0][0]][this.state.end[0][1]] = 4;\n      // special point : end\n      this.setState({grid: newGrid, pointer: [], pointer2: []});\n    }\n    changeState = (x, y) => {\n      if (this.state.grid[parseInt(x, 10)][parseInt(y, 10)] === 3) {\n        return;\n      } // check if the current point is a special point (start or end)\n      const grid = this.state.grid;\n      if (grid[parseInt(x, 10)][parseInt(y, 10)] === 0 ||\n          grid[parseInt(x, 10)][parseInt(y, 10)] === 2) {\n        // if it is a visited cell or empty , make it a wall\n        grid[parseInt(x, 10)][parseInt(y, 10)] = 1;\n      } else { // convert a wall to empty cell\n        grid[parseInt(x, 10)][parseInt(y, 10)] = 0;\n      }\n      grid[this.state.start[0][0]][this.state.start[0][1]] = 3;\n      grid[this.state.end[0][0]][this.state.end[0][1]] = 4;\n      this.setState({grid});\n    }\n    changeSpeed = (newSpeed) => this.setState({speed: newSpeed});\n    selectAlgo = (name) => this.setState({currentAlgo: name});\n    visualize = async () => {\n      if (this.state.currentAlgo === \"Not Selected\") {\n        return;\n      }\n      const pointer = this.state.pointer;\n      pointer[0] = this.state.start[0][0];\n      pointer[1] = this.state.start[0][1];\n      this.setState({pointer, visual: true});\n\n      if (this.state.start[0] === this.state.end[0][0] &&\n          this.state.start[1] === this.state.end[0][1]) {\n        return;\n      }\n\n      if (this.state.start[0][0] === this.state.end[0][0] &&\n          this.state.start[0][1] === this.state.end[0][1]) {\n        return;\n      } else if (this.state.currentAlgo === \"DFS\") {\n        await this.dfs();\n      } else if (this.state.currentAlgo === \"Dijkstra\") {\n        await this.dijkstra();\n      } else if (this.state.currentAlgo === \"BFS\") {\n        await this.bfs();\n      } else if (this.state.currentAlgo === \"biDijkstra\") {\n        await this.bidirectionalDijkstra();\n      } else if (this.state.currentAlgo === \"Best-FS\") {\n        await this.aStar(0, 1);\n      } else if (this.state.currentAlgo === \"A*\") {\n        await this.aStar(1, 1);\n      } else if (this.state.currentAlgo === \"Weighted-AStar\") {\n        await this.aStar(1, 10);\n      } else if (this.state.currentAlgo === \"TSP\") {\n        this.state.graph =\n            new Graph(this.state.grid, this.state.height, this.state.width);\n        await this.tsp();\n      } else if (this.state.currentAlgo === \"biBFS\") {\n        await this.biBFS();\n      } else if (this.state.currentAlgo === \"BiAstar\") {\n        await this.biAstar();\n      }\n    }\n    pathdisplay = async (path) => {\n      const grid = this.state.grid;\n      for (let i = 1; i < path.length; i++) {\n        grid[path[parseInt(i, 10)][0]][path[parseInt(i, 10)][1]] = 5;\n        await new Promise((done) => setTimeout(() => done(), this.state.speed));\n        this.setState({grid});\n      }\n      if (!this.state.bi) {\n        grid[this.state.end[0][0]][this.state.end[0][1]] = 5;\n      } else {\n        grid[this.state.end[0][0]][this.state.end[0][1]] = 4;\n      }\n      grid[this.state.start[0][0]][this.state.start[0][1]] = 3;\n\n      await new Promise((done) => setTimeout(() => done(), this.state.speed));\n      this.setState({grid, visual: false,\n        bi: false, pointer: [], pointer2: []});\n    }\n    clearPath = () => {\n      const g = this.state.grid;\n      for (let i = 0; i < this.state.height; i++) {\n        for (let j = 0; j < this.state.width; j++) {\n          if (g[parseInt(i, 10)][parseInt(j, 10)] === 5) {\n            g[parseInt(i, 10)][parseInt(j, 10)] = 2;\n          }\n        }\n      }\n      this.setState({path: [], grid: g});\n    }\n    render() {\n      return (\n        <div>\n          <div id=\"navigation\">\n            <Navbar randomize={this.randomizeMatrix}\n              clearWalls={this.clearGrid}\n              newSpeed={this.changeSpeed}\n              multiDestination={this.multiDestination}\n              handle={this.selectAlgo}\n              selectedAlgo={this.currentAlgo}\n              visualize={this.visualize}\n              clearPath = {this.clearPath}\n              multipledestinations = {this.state.multipledestinations}\n              visual={this.state.visual}\n              toggleSource= {this.toggleSource}\n              toggleDestination=\n                {this.toggleDestination}/>\n          </div>\n          <div id=\"Board\">\n            <Grid start={this.state.start} end={this.state.end}\n              height={this.state.height}\n              multipledestinations = {this.state.multipledestinations}\n              bi={this.state.bi}\n              width={this.state.width}\n              grid={this.state.grid}\n              changeState={this.changeState}\n              changesourcefunc={this.changedSource}\n              changedestfunc = {this.changedDestination}\n              pointer={this.state.pointer}\n              pointer2={this.state.pointer2}\n              changeSource = {this.state.changeSource}\n              changeDestination = {this.state.changeDestination} />\n          </div>\n          <D show={this.state.modalshow} handleClose={this.hideModal} />\n\n        </div>\n      );\n    }\n}\nexport default App;\n","import React, {Component} from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport BackgroundSlider from \"react-background-slider\";\nimport mars1 from \"../media/mars1.jpg\";\nimport mars2 from \"../media/mars2.jpg\";\nimport mars3 from \"../media/mars3.jpg\";\nimport mars4 from \"../media/mars4.png\";\nimport mars5 from \"../media/mars5.jpg\";\nimport mars6 from \"../media/mars6.jpg\";\nimport mars7 from \"../media/mars7.jpg\";\nimport mars8 from \"../media/mars8.jpg\";\nimport mars9 from \"../media/mars9.jpg\";\n\nimport {Redirect} from \"react-router-dom\";\nimport Background from \"./LANDING.png\";\n\n/**\n * Front Landing Page\n */\nclass Welcome extends React.Component {\n  /**\n   *\n   * @param {props} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isChecked1: false,\n      isChecked2: false,\n      userAnswer: null,\n    };\n  }\n  toggleChange = (option) => {\n    if (option === 1) {\n      this.setState({isChecked1: true, isChecked2: false, userAnswer: \"True\"});\n    } else {\n      this.setState({isChecked1: false, isChecked2: true, userAnswer: \"False\"});\n    }\n  }\n  render() {\n    return (\n      <>\n        <Modal\n          show={this.props.show}\n          onHide={this.props.handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n          style={{\n            backgroundColor: \"#3423ae 80%\",\n          }}\n\n        >\n          <Modal.Header closeButton style={{\n            backgroundColor: \"#89daff\",\n            opacity: \"100%\",\n          }}>\n            <Modal.Title>Get Aboard!</Modal.Title>\n          </Modal.Header>\n          <Modal.Body style={{\n            backgroundColor: \"#89daff\",\n            opacity: \"100%\",\n          }}>\n            <div><i>Answer this to move ahead!</i></div>\n            <div>{this.props.question}</div>\n            <div>\n              <label>\n                <input type=\"checkbox\"\n                  checked={this.state.isChecked1}\n                  onChange={() => this.toggleChange(1)}\n                />\n                  True\n              </label>\n            </div>\n            <div>\n              <label>\n                <input type=\"checkbox\"\n                  checked={this.state.isChecked2}\n                  onChange={() => this.toggleChange(2)}\n                />\n                  False\n              </label>\n            </div>\n          </Modal.Body>\n          <Modal.Footer\n            style={{\n              backgroundColor: \"#89daff\",\n              opacity: \"100%\",\n            }}>\n            <Button variant=\"danger\" onClick={this.props.handleClose} style={{\n              backgroundColor: \"#ff0000\",\n            }}>\n                Try Later\n            </Button>\n            <Button variant=\"primary\" style={{\n              backgroundColor: \"#00ff00\",\n            }}\n            onClick={() => this.props.onSubmit(this.state.userAnswer)}>\n                LETS GO!\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\n/**\n * Parse the question using get request\n * @param {string} theUrl\n * @return {string}\n */\nfunction httpGet(theUrl) {\n  const xmlHttp = new XMLHttpRequest();\n  xmlHttp.open( \"GET\", theUrl, false ); // false for synchronous request\n  xmlHttp.send( null );\n  return xmlHttp.responseText;\n}\n\n/**\n * Stores properties related to user question and page redirection\n */\nclass Home extends Component {\n  state = {\n    show: false,\n    redirect: null,\n    question: null,\n    answer: null,\n  };\n\n  /**\n   * Get questions from API before page loads\n   * @return {Promise<void>}\n   */\n  async componentDidMount() {\n    try {\n      let res = httpGet(\"https://opentdb.com/api.php?amount=1&category=18&type=boolean\");\n      res = JSON.parse(res);\n      res = res[\"results\"][0];\n      res[\"question\"] = res[\"question\"].replace(/&quot;/gi, \"\\\"\");\n      res[\"question\"] = res[\"question\"].replace(/&#039;/gi, \"/'\");\n      this.setState({question: res[\"question\"], answer: res[\"correct_answer\"]});\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  /**\n   * Changes state when user clicks submit\n   * @param {anyObject }option\n   */\n  onSubmit(option) {\n    if (option === this.state.answer) {\n      this.setState({redirect: \"/mars-colonization-project/App\"});\n      this.setState({redirect: \"/App\"});\n    } else {\n      alert(\"Wrong Option Chosen\");\n    }\n  }\n  handleShow = () => {\n    this.setState({show: true});\n  };\n\n  handleClose = () => {\n    this.setState({show: false});\n  };\n\n  /**\n   * renders the home screen\n   * @return {*}\n   */\n  render() {\n    if (this.state.redirect !== null) {\n      return <Redirect to='/mars-colonization-project/App'/>;\n    }\n    return (\n\n      <div id = \"home\"\n        style={{background:\n                 \"url(\" + {Background} + \")\",\n        width: \"100%\",\n        height: \"100%\",\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\"}}>\n        <div id=\"MissionTitle\"\n          className=\"mb-4 p-4\"\n          style={{backgroundColor: \"#e5e5e5\",\n            opacity: \"70%\",\n            borderRadius: \"25%\",\n            float: \"right\",\n            width: \"25%\",\n            height: \"25%\",\n            fontSize: \"2em\",\n            marginTop: \"35px\"}}>\n          <p><b>&nbsp;&nbsp;&nbsp;&nbsp;MISSION</b></p>\n          <p><b> COLONIZE MARS! </b></p>\n        </div>\n\n\n        <Button variant=\"primary\" size=\"lg\" onClick={this.handleShow} style={{\n          backgroundColor: \"#283618\",\n          color: \"#fefae0\",\n          position: \"relative\",\n          margin: \"20%\",\n          marginLeft: \"38%\",\n        }}>\n          <strong>LAUNCH TO MARS</strong>\n        </Button>\n        <Welcome question = {this.state.question}\n          answer = {this.state.answer}\n          handleClose={this.handleClose}\n          show={this.state.show}\n          handleShow={this.handleShow}\n          onSubmit={this.onSubmit.bind(this)}/>\n        <BackgroundSlider\n          images={[mars7, mars1, mars2, mars5, mars7,\n            mars3, mars4, mars8, mars9, mars6]}\n          duration={3}\n          transition={0}/>\n      </div>\n\n    );\n  }\n}\n\n\nexport default Home;\n","import React from \"react\";\nimport App from \"./App\";\nimport Home from \"./components/Home\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\n/**\n *\n * @return {*}\n * @constructor\n */\nexport default function Root() {\n  return (\n    <Router>\n      <Switch>\n\n        <Route exact path=\"/mars-colonization-project\">\n          <Home />\n        </Route>\n        <Route path=\"/mars-colonization-project/App\">\n          <App />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === \"installed\") {\n              if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n                console.log(\n                    \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n                console.log(\"Content is cached for offline use.\");\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error(\"Error during service worker registration:\", error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {\"Service-Worker\": \"script\"},\n  })\n      .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get(\"content-type\");\n        if (\n          response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n        ) {\n        // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n        // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            \"No internet connection found. App is running in offline mode.\",\n        );\n      });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Root from \"./Root\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n      <Root />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}